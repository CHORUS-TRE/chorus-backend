apiVersion: v1
kind: Namespace
metadata:
  name: int

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: chorus-cicd-chorus
  namespace: int
  labels:
    app: chorus-cicd-chorus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: chorus-cicd-chorus
  template:
    metadata:
      labels:
        app: chorus-cicd-chorus
    spec:
      containers:
      - name: chorus-cicd-chorus
        image: harbor.build.chorus-tre.ch/chorus/backend:latest
        ports:
        - containerPort: 3001
      imagePullSecrets:
      - name: registry-auth
      - name: regcred

---

apiVersion: v1
kind: Service
metadata:
  name: chorus-cicd-chorus
  namespace: int
spec:
  selector:
    app: chorus-cicd-chorus
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3001
  type: ClusterIP

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: chorus-cicd-chorus-ingress
  namespace: int
  annotations:
    kubernetes.io/ingress.class: "public"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: 1024m
spec:
  tls:
  - hosts:
    - chorus-cicd-chorus.itrcs3-app.intranet.chuv
    secretName: chorus-cicd-chorus-tls
  rules:
  - host: chorus-cicd-chorus.itrcs3-app.intranet.chuv
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: chorus-cicd-chorus
            port:
              number: 80
