swagger: "2.0"
info:
  title: chorus notification service
  version: "1.0"
  contact:
    name: chorus notification service
    url: https://github.com/CHORUS-TRE/chorus-backend
    email: dev@chorus-tre.ch
tags:
  - name: NotificationService
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /api/rest/v1/notifications:
    get:
      summary: List notifications
      description: This endpoint returns a list of notifications
      operationId: NotificationService_GetNotifications
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chorusGetNotificationsReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: pagination.offset
          description: Optionally offset the number of results
          in: query
          required: false
          type: integer
          format: int64
        - name: pagination.limit
          description: Optionally limit the number of results (between 1 and 500)
          in: query
          required: false
          type: integer
          format: int64
        - name: pagination.sort.order
          in: query
          required: false
          type: string
        - name: pagination.sort.type
          in: query
          required: false
          type: string
        - name: pagination.query
          description: Optionally filter the results
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
          x-example:
            - user_id=9999
            - status=STATUS_CREATED,STATUS_CLOSED
        - name: isRead
          in: query
          required: false
          type: boolean
      tags:
        - NotificationService
  /api/rest/v1/notifications/count:
    get:
      summary: Count unread notifications
      description: This endpoint returns the amount of unread notifications
      operationId: NotificationService_CountUnreadNotifications
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chorusCountUnreadNotificationsReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      tags:
        - NotificationService
  /api/rest/v1/notifications/read:
    post:
      summary: Mark a notification as read
      description: This endpoint marks a notification as read
      operationId: NotificationService_MarkNotificationsAsRead
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/chorusMarkNotificationsAsReadRequest'
      tags:
        - NotificationService
definitions:
  chorusCountUnreadNotificationsReply:
    type: object
    properties:
      result:
        type: integer
        format: int64
  chorusGetNotificationsReply:
    type: object
    properties:
      result:
        type: array
        items:
          type: object
          $ref: '#/definitions/chorusNotification'
      totalItems:
        type: integer
        format: int64
  chorusMarkNotificationsAsReadRequest:
    type: object
    properties:
      notificationIds:
        type: array
        items:
          type: string
      markAll:
        type: boolean
  chorusNotification:
    type: object
    properties:
      id:
        type: string
      tenantId:
        type: string
        format: uint64
      message:
        type: string
      createdAt:
        type: string
        format: date-time
      readAt:
        type: string
        format: date-time
  chorusPaginationQuery:
    type: object
    properties:
      offset:
        type: integer
        format: int64
        description: Optionally offset the number of results
      limit:
        type: integer
        format: int64
        description: Optionally limit the number of results (between 1 and 500)
      sort:
        $ref: '#/definitions/chorusSort'
        description: Optionally sort the results
      query:
        type: array
        items:
          type: string
        description: Optionally filter the results
        x-example:
          - user_id=9999
          - status=STATUS_CREATED,STATUS_CLOSED
  chorusSort:
    type: object
    properties:
      order:
        type: string
      type:
        type: string
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
