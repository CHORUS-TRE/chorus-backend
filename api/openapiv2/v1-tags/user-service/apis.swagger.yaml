swagger: "2.0"
info:
  title: chorus user service
  version: "1.0"
  contact:
    name: chorus user service
    url: https://github.com/CHORUS-TRE/chorus-backend
    email: dev@chorus-tre.ch
tags:
  - name: UserService
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /api/rest/v1/users:
    get:
      summary: List users
      description: This endpoint returns a list of users
      operationId: UserService_GetUsers
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chorusGetUsersReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      tags:
        - UserService
    post:
      summary: Create a user
      description: This endpoint creates a user
      operationId: UserService_CreateUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chorusCreateUserReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/chorusUser'
      tags:
        - UserService
      security: []
    put:
      summary: Update a user
      description: This endpoint updates a user
      operationId: UserService_UpdateUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chorusUpdateUserReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/chorusUpdateUserRequest'
      tags:
        - UserService
  /api/rest/v1/users/me:
    get:
      summary: Get my own user
      description: This endpoint returns the details of the authenticated user
      operationId: UserService_GetUserMe
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chorusGetUserMeReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      tags:
        - UserService
  /api/rest/v1/users/me/password:
    put:
      summary: Update password
      description: This endpoint updates the password of the authenticated user
      operationId: UserService_UpdatePassword
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chorusUpdatePasswordReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/chorusUpdatePasswordRequest'
      tags:
        - UserService
  /api/rest/v1/users/me/totp/enable:
    post:
      summary: Enable TOTP
      description: This endpoint enables the TOTP of the authenticated user
      operationId: UserService_EnableTotp
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chorusEnableTotpReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/chorusEnableTotpRequest'
      tags:
        - UserService
  /api/rest/v1/users/me/totp/reset:
    post:
      summary: Reset TOTP
      description: This endpoint resets the TOTP of the authenticated user
      operationId: UserService_ResetTotp
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chorusResetTotpReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/chorusResetTotpRequest'
      tags:
        - UserService
  /api/rest/v1/users/{id}:
    get:
      summary: Get a user
      description: This endpoint returns a user
      operationId: UserService_GetUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chorusGetUserReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - UserService
    delete:
      summary: Delete a user
      description: This endpoint deletes a user
      operationId: UserService_DeleteUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chorusDeleteUserReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - UserService
  /api/rest/v1/users/{id}/password/reset:
    post:
      summary: Reset password
      description: This endpoint resets a user's password
      operationId: UserService_ResetPassword
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chorusResetPasswordReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          type: string
          format: uint64
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UserServiceResetPasswordBody'
      tags:
        - UserService
definitions:
  UserServiceResetPasswordBody:
    type: object
  chorusCreateUserReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/chorusCreateUserResult'
    title: Create Users
  chorusCreateUserResult:
    type: object
    properties:
      id:
        type: string
        format: uint64
  chorusDeleteUserReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/chorusDeleteUserResult'
  chorusDeleteUserResult:
    type: object
  chorusEnableTotpReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/chorusEnableTotpResult'
  chorusEnableTotpRequest:
    type: object
    properties:
      totp:
        type: string
    title: Enable TOTP
  chorusEnableTotpResult:
    type: object
  chorusGetUserMeReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/chorusGetUserMeResult'
  chorusGetUserMeResult:
    type: object
    properties:
      me:
        $ref: '#/definitions/chorusUser'
    title: Get User (me)
  chorusGetUserReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/chorusGetUserResult'
  chorusGetUserResult:
    type: object
    properties:
      user:
        $ref: '#/definitions/chorusUser'
  chorusGetUsersReply:
    type: object
    properties:
      result:
        type: array
        items:
          type: object
          $ref: '#/definitions/chorusUser'
  chorusResetPasswordReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/chorusResetPasswordResult'
  chorusResetPasswordResult:
    type: object
  chorusResetTotpReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/chorusResetTotpResult'
  chorusResetTotpRequest:
    type: object
    properties:
      password:
        type: string
    title: Reset TOTP
  chorusResetTotpResult:
    type: object
    properties:
      totpSecret:
        type: string
      totpRecoveryCodes:
        type: array
        items:
          type: string
  chorusUpdatePasswordReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/chorusUpdateUserResult'
  chorusUpdatePasswordRequest:
    type: object
    properties:
      currentPassword:
        type: string
      newPassword:
        type: string
    title: Update User Password
  chorusUpdateUserReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/chorusUpdateUserResult'
  chorusUpdateUserRequest:
    type: object
    properties:
      user:
        $ref: '#/definitions/chorusUser'
    title: Update User
  chorusUpdateUserResult:
    type: object
  chorusUser:
    type: object
    properties:
      id:
        type: string
        format: uint64
      firstName:
        type: string
      lastName:
        type: string
      username:
        type: string
      source:
        type: string
      password:
        type: string
      status:
        type: string
      roles:
        type: array
        items:
          type: string
      totpEnabled:
        type: boolean
      passwordChanged:
        type: boolean
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
