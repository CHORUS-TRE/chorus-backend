syntax = "proto3";
package templatebackend;
option go_package = ".;templatebackend";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "google/protobuf/empty.proto";

import "user.proto";


option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
        title: "template backend";
        version: "1.0";
        contact: {
            name: "template backend user service";
            url: "https://template-backend.horus-graph.intranet.chuv";
            email: "development.bdsc@chuv.ch";
        };
    };

    schemes: HTTP;
    consumes: "application/json";
    produces: "application/json";

    security_definitions: {
        security: {
            key: "Bearer";
            value: {
                type: TYPE_API_KEY;
                in: IN_HEADER;
                name: "Authorization";
            }
        }
    }

    security: {
        security_requirement: {
            key: "Bearer";
            value: {};
        }
    }
    security: {}
};


// Get Users
message GetUsersRequest {
    // XXX: Maybe allow some filtering queries or batch sizes.
}
message GetUsersReply {
    repeated User result = 1;
}

// Get User (by id)
message GetUserRequest {
    uint64 id = 1;
}

message GetUserResult {
    User user = 1;
}
message GetUserReply {
    GetUserResult result = 1;
}

// Get User (me)
message GetUserMeResult {
    User me = 1;
}

message GetUserMeReply {
    GetUserMeResult result = 1;
}

// Update User Password
message UpdatePasswordRequest {
    string currentPassword = 1;
    string newPassword = 2;
}

message UpdatePasswordReply {
    UpdateUserResult result = 1;
}

message UpdatePasswordResult {}

// Create Users
message CreateUserReply {
    CreateUserResult result = 1;
}
message CreateUserResult {
    uint64 id = 1;
}

// Update User
message UpdateUserRequest {
    User user = 1;
}

message UpdateUserResult {}

message UpdateUserReply {
    UpdateUserResult result = 1;
}

// Delete User
message DeleteUserRequest {
    uint64  id = 1;
}

message DeleteUserResult {}

message DeleteUserReply {
    DeleteUserResult result = 1;
}

// Enable TOTP
message EnableTotpRequest {
    string totp = 1;
}

message EnableTotpResult {}

message EnableTotpReply {
    EnableTotpResult result = 1;
}

// Reset TOTP
message ResetTotpRequest {
    string password = 1;
}

message ResetTotpResult {
    string totpSecret = 1;
    repeated string totpRecoveryCodes = 2;
}

message ResetTotpReply {
    ResetTotpResult result = 1;
}

// Reset Password

message ResetPasswordRequest {
    uint64 id = 1;
}

message ResetPasswordResult {}

message ResetPasswordReply {
    ResetPasswordResult result = 1;
}

service UserService {
    rpc UpdatePassword(UpdatePasswordRequest) returns (UpdatePasswordReply) {
        option (google.api.http) = {
            put: "/api/rest/v1/users/me/password"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            summary: "Update password";
            description: "This endpoint updates the password of the authenticated user";
            tags: "Users";
            extensions: {
                key: "x-openapi-router-controller";
                value {string_value: "user_controller"};
            };
        };
    };

    // rpc EnableTotp (EnableTotpRequest) returns (EnableTotpReply) {
    //     option (google.api.http) = {
    //         post: "/api/rest/v1/users/me/totp/enable"
    //         body: "*"
    //     };
    //     option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
    //    //         summary: "Enable TOTP";
    //         description: "This endpoint enables the TOTP of the authenticated user";
    //         tags: "Users";
    //         extensions: {
    //             key: "x-openapi-router-controller";
    //             value {string_value: "user_controller"};
    //         };
    //     };
    // };

    // rpc ResetTotp (ResetTotpRequest) returns (ResetTotpReply) {
    //     option (google.api.http) = {
    //         post: "/api/rest/v1/users/me/totp/reset"
    //         body: "*"
    //     };
    //     option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
    //    //         summary: "Reset TOTP";
    //         description: "This endpoint resets the TOTP of the authenticated user";
    //         tags: "Users";
    //         extensions: {
    //             key: "x-openapi-router-controller";
    //             value {string_value: "user_controller"};
    //         };
    //     };
    // };

    rpc GetUserMe(google.protobuf.Empty) returns (GetUserMeReply) {
        option (google.api.http) = {
            get: "/api/rest/v1/users/me"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            summary: "Get my own user";
            description: "This endpoint returns the details of the authenticated user";
            tags: "Users";
            extensions: {
                key: "x-openapi-router-controller";
                value {string_value: "user_controller"};
            };
        };
    };

    // rpc GetUsers(GetUsersRequest) returns (GetUsersReply) {
    //     option (google.api.http) = {
    //         get: "/api/rest/v1/users"
    //     };
    //     option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
    //    //         summary: "List users";
    //         description: "This endpoint returns a list of users";
    //         tags: "Users";
    //         extensions: {
    //             key: "x-openapi-router-controller";
    //             value {string_value: "user_controller"};
    //         };
    //     };
    // };

    // rpc UpdateUser(UpdateUserRequest) returns (UpdateUserReply) {
    //     option (google.api.http) = {
    //         put: "/api/rest/v1/users"
    //         body: "*"
    //     };
    //     option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
    //    //         summary: "Update a user";
    //         description: "This endpoint updates a user";
    //         tags: "Users";
    //         extensions: {
    //             key: "x-openapi-router-controller";
    //             value {string_value: "user_controller"};
    //         };
    //     };
    // };

    rpc ResetPassword(ResetPasswordRequest) returns (ResetPasswordReply) {
        option (google.api.http) = {
            post: "/api/rest/v1/users/{id}/password/reset"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            summary: "Reset password";
            description: "This endpoint resets a user's password";
            tags: "Users";
            extensions: {
                key: "x-openapi-router-controller";
                value {string_value: "user_controller"};
            };
        };
    };

    rpc GetUser(GetUserRequest) returns (GetUserReply) {
        option (google.api.http) = {
            get: "/api/rest/v1/users/{id}"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            summary: "Get a user";
            description: "This endpoint returns a user";
            tags: "Users";
            extensions: {
                key: "x-openapi-router-controller";
                value {string_value: "user_controller"};
            };
        };
    };

    rpc DeleteUser(DeleteUserRequest) returns (DeleteUserReply) {
        option (google.api.http) = {
            delete: "/api/rest/v1/users/{id}"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            summary: "Delete a user";
            description: "This endpoint deletes a user";
            tags: "Users";
            extensions: {
                key: "x-openapi-router-controller";
                value {string_value: "user_controller"};
            };
        };
    };

    rpc CreateUser(User) returns (CreateUserReply) {
        option (google.api.http) = {
            post: "/api/rest/v1/users"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            summary: "Create a user";
            description: "This endpoint creates a user";
            tags: "Users";
            extensions: {
                key: "x-openapi-router-controller";
                value {string_value: "user_controller"};
            };
        };
    };
}