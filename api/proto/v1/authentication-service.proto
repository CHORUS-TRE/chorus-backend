syntax = "proto3";
package chorus;
option go_package = ".;chorus";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

import "credentials.proto";
import "public_endpoint.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
        title: "chorus authentication service";
        version: "1.0";
        contact: {
            name: "chorus authentication service";
            url: "https://github.com/CHORUS-TRE/chorus-backend";
            email: "dev@chorus-tre.ch";
        };
    };
    schemes: HTTP;
    consumes: "application/json";
    produces: "application/json";
};

message AuthenticationReply {
    AuthenticationResult result = 1;
}
message AuthenticationResult {
    string token  = 1;
}

service AuthenticationService {
    rpc Authenticate(Credentials) returns (AuthenticationReply) {
        option (google.api.http) = {
            post: "/api/rest/v1/authentication/login"
            body: "*"
        };
        option (public_endpoint) = true;
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            summary: "Authenticate";
            description: "This endpoint authenticates a user";
            tags: "AuthenticationService";
            security: {}
        };
    };
}
