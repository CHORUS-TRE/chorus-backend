// Code generated by go-swagger; DO NOT EDIT.

package workspace_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/CHORUS-TRE/chorus-backend/tests/helpers/generated/client/workspace/models"
)

// WorkspaceServiceGetWorkspaceFileReader is a Reader for the WorkspaceServiceGetWorkspaceFile structure.
type WorkspaceServiceGetWorkspaceFileReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *WorkspaceServiceGetWorkspaceFileReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewWorkspaceServiceGetWorkspaceFileOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewWorkspaceServiceGetWorkspaceFileDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewWorkspaceServiceGetWorkspaceFileOK creates a WorkspaceServiceGetWorkspaceFileOK with default headers values
func NewWorkspaceServiceGetWorkspaceFileOK() *WorkspaceServiceGetWorkspaceFileOK {
	return &WorkspaceServiceGetWorkspaceFileOK{}
}

/*
WorkspaceServiceGetWorkspaceFileOK describes a response with status code 200, with default header values.

A successful response.
*/
type WorkspaceServiceGetWorkspaceFileOK struct {
	Payload *models.ChorusGetWorkspaceFileReply
}

// IsSuccess returns true when this workspace service get workspace file o k response has a 2xx status code
func (o *WorkspaceServiceGetWorkspaceFileOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this workspace service get workspace file o k response has a 3xx status code
func (o *WorkspaceServiceGetWorkspaceFileOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this workspace service get workspace file o k response has a 4xx status code
func (o *WorkspaceServiceGetWorkspaceFileOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this workspace service get workspace file o k response has a 5xx status code
func (o *WorkspaceServiceGetWorkspaceFileOK) IsServerError() bool {
	return false
}

// IsCode returns true when this workspace service get workspace file o k response a status code equal to that given
func (o *WorkspaceServiceGetWorkspaceFileOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the workspace service get workspace file o k response
func (o *WorkspaceServiceGetWorkspaceFileOK) Code() int {
	return 200
}

func (o *WorkspaceServiceGetWorkspaceFileOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/rest/v1/workspaces/{workspaceId}/files/{path}][%d] workspaceServiceGetWorkspaceFileOK %s", 200, payload)
}

func (o *WorkspaceServiceGetWorkspaceFileOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/rest/v1/workspaces/{workspaceId}/files/{path}][%d] workspaceServiceGetWorkspaceFileOK %s", 200, payload)
}

func (o *WorkspaceServiceGetWorkspaceFileOK) GetPayload() *models.ChorusGetWorkspaceFileReply {
	return o.Payload
}

func (o *WorkspaceServiceGetWorkspaceFileOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ChorusGetWorkspaceFileReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewWorkspaceServiceGetWorkspaceFileDefault creates a WorkspaceServiceGetWorkspaceFileDefault with default headers values
func NewWorkspaceServiceGetWorkspaceFileDefault(code int) *WorkspaceServiceGetWorkspaceFileDefault {
	return &WorkspaceServiceGetWorkspaceFileDefault{
		_statusCode: code,
	}
}

/*
WorkspaceServiceGetWorkspaceFileDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type WorkspaceServiceGetWorkspaceFileDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// IsSuccess returns true when this workspace service get workspace file default response has a 2xx status code
func (o *WorkspaceServiceGetWorkspaceFileDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this workspace service get workspace file default response has a 3xx status code
func (o *WorkspaceServiceGetWorkspaceFileDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this workspace service get workspace file default response has a 4xx status code
func (o *WorkspaceServiceGetWorkspaceFileDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this workspace service get workspace file default response has a 5xx status code
func (o *WorkspaceServiceGetWorkspaceFileDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this workspace service get workspace file default response a status code equal to that given
func (o *WorkspaceServiceGetWorkspaceFileDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the workspace service get workspace file default response
func (o *WorkspaceServiceGetWorkspaceFileDefault) Code() int {
	return o._statusCode
}

func (o *WorkspaceServiceGetWorkspaceFileDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/rest/v1/workspaces/{workspaceId}/files/{path}][%d] WorkspaceService_GetWorkspaceFile default %s", o._statusCode, payload)
}

func (o *WorkspaceServiceGetWorkspaceFileDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/rest/v1/workspaces/{workspaceId}/files/{path}][%d] WorkspaceService_GetWorkspaceFile default %s", o._statusCode, payload)
}

func (o *WorkspaceServiceGetWorkspaceFileDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *WorkspaceServiceGetWorkspaceFileDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
