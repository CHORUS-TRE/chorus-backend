// Code generated by go-swagger; DO NOT EDIT.

package authentication_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/CHORUS-TRE/chorus-backend/tests/helpers/generated/client/authentication/models"
)

// AuthenticationServiceAuthenticateReader is a Reader for the AuthenticationServiceAuthenticate structure.
type AuthenticationServiceAuthenticateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AuthenticationServiceAuthenticateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAuthenticationServiceAuthenticateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewAuthenticationServiceAuthenticateDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAuthenticationServiceAuthenticateOK creates a AuthenticationServiceAuthenticateOK with default headers values
func NewAuthenticationServiceAuthenticateOK() *AuthenticationServiceAuthenticateOK {
	return &AuthenticationServiceAuthenticateOK{}
}

/*
AuthenticationServiceAuthenticateOK describes a response with status code 200, with default header values.

A successful response.
*/
type AuthenticationServiceAuthenticateOK struct {
	Payload *models.ChorusAuthenticationReply
}

// IsSuccess returns true when this authentication service authenticate o k response has a 2xx status code
func (o *AuthenticationServiceAuthenticateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this authentication service authenticate o k response has a 3xx status code
func (o *AuthenticationServiceAuthenticateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this authentication service authenticate o k response has a 4xx status code
func (o *AuthenticationServiceAuthenticateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this authentication service authenticate o k response has a 5xx status code
func (o *AuthenticationServiceAuthenticateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this authentication service authenticate o k response a status code equal to that given
func (o *AuthenticationServiceAuthenticateOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the authentication service authenticate o k response
func (o *AuthenticationServiceAuthenticateOK) Code() int {
	return 200
}

func (o *AuthenticationServiceAuthenticateOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/rest/v1/authentication/login][%d] authenticationServiceAuthenticateOK %s", 200, payload)
}

func (o *AuthenticationServiceAuthenticateOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/rest/v1/authentication/login][%d] authenticationServiceAuthenticateOK %s", 200, payload)
}

func (o *AuthenticationServiceAuthenticateOK) GetPayload() *models.ChorusAuthenticationReply {
	return o.Payload
}

func (o *AuthenticationServiceAuthenticateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ChorusAuthenticationReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthenticationServiceAuthenticateDefault creates a AuthenticationServiceAuthenticateDefault with default headers values
func NewAuthenticationServiceAuthenticateDefault(code int) *AuthenticationServiceAuthenticateDefault {
	return &AuthenticationServiceAuthenticateDefault{
		_statusCode: code,
	}
}

/*
AuthenticationServiceAuthenticateDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type AuthenticationServiceAuthenticateDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// IsSuccess returns true when this authentication service authenticate default response has a 2xx status code
func (o *AuthenticationServiceAuthenticateDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this authentication service authenticate default response has a 3xx status code
func (o *AuthenticationServiceAuthenticateDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this authentication service authenticate default response has a 4xx status code
func (o *AuthenticationServiceAuthenticateDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this authentication service authenticate default response has a 5xx status code
func (o *AuthenticationServiceAuthenticateDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this authentication service authenticate default response a status code equal to that given
func (o *AuthenticationServiceAuthenticateDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the authentication service authenticate default response
func (o *AuthenticationServiceAuthenticateDefault) Code() int {
	return o._statusCode
}

func (o *AuthenticationServiceAuthenticateDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/rest/v1/authentication/login][%d] AuthenticationService_Authenticate default %s", o._statusCode, payload)
}

func (o *AuthenticationServiceAuthenticateDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/rest/v1/authentication/login][%d] AuthenticationService_Authenticate default %s", o._statusCode, payload)
}

func (o *AuthenticationServiceAuthenticateDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *AuthenticationServiceAuthenticateDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
