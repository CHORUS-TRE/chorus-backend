// Code generated by go-swagger; DO NOT EDIT.

package authentication_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/CHORUS-TRE/chorus-backend/tests/helpers/generated/client/authentication/models"
)

// AuthenticationServiceGetAuthenticationModesReader is a Reader for the AuthenticationServiceGetAuthenticationModes structure.
type AuthenticationServiceGetAuthenticationModesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AuthenticationServiceGetAuthenticationModesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAuthenticationServiceGetAuthenticationModesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewAuthenticationServiceGetAuthenticationModesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAuthenticationServiceGetAuthenticationModesOK creates a AuthenticationServiceGetAuthenticationModesOK with default headers values
func NewAuthenticationServiceGetAuthenticationModesOK() *AuthenticationServiceGetAuthenticationModesOK {
	return &AuthenticationServiceGetAuthenticationModesOK{}
}

/*
AuthenticationServiceGetAuthenticationModesOK describes a response with status code 200, with default header values.

A successful response.
*/
type AuthenticationServiceGetAuthenticationModesOK struct {
	Payload *models.ChorusGetAuthenticationModesReply
}

// IsSuccess returns true when this authentication service get authentication modes o k response has a 2xx status code
func (o *AuthenticationServiceGetAuthenticationModesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this authentication service get authentication modes o k response has a 3xx status code
func (o *AuthenticationServiceGetAuthenticationModesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this authentication service get authentication modes o k response has a 4xx status code
func (o *AuthenticationServiceGetAuthenticationModesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this authentication service get authentication modes o k response has a 5xx status code
func (o *AuthenticationServiceGetAuthenticationModesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this authentication service get authentication modes o k response a status code equal to that given
func (o *AuthenticationServiceGetAuthenticationModesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the authentication service get authentication modes o k response
func (o *AuthenticationServiceGetAuthenticationModesOK) Code() int {
	return 200
}

func (o *AuthenticationServiceGetAuthenticationModesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/rest/v1/authentication/modes][%d] authenticationServiceGetAuthenticationModesOK %s", 200, payload)
}

func (o *AuthenticationServiceGetAuthenticationModesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/rest/v1/authentication/modes][%d] authenticationServiceGetAuthenticationModesOK %s", 200, payload)
}

func (o *AuthenticationServiceGetAuthenticationModesOK) GetPayload() *models.ChorusGetAuthenticationModesReply {
	return o.Payload
}

func (o *AuthenticationServiceGetAuthenticationModesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ChorusGetAuthenticationModesReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthenticationServiceGetAuthenticationModesDefault creates a AuthenticationServiceGetAuthenticationModesDefault with default headers values
func NewAuthenticationServiceGetAuthenticationModesDefault(code int) *AuthenticationServiceGetAuthenticationModesDefault {
	return &AuthenticationServiceGetAuthenticationModesDefault{
		_statusCode: code,
	}
}

/*
AuthenticationServiceGetAuthenticationModesDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type AuthenticationServiceGetAuthenticationModesDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// IsSuccess returns true when this authentication service get authentication modes default response has a 2xx status code
func (o *AuthenticationServiceGetAuthenticationModesDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this authentication service get authentication modes default response has a 3xx status code
func (o *AuthenticationServiceGetAuthenticationModesDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this authentication service get authentication modes default response has a 4xx status code
func (o *AuthenticationServiceGetAuthenticationModesDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this authentication service get authentication modes default response has a 5xx status code
func (o *AuthenticationServiceGetAuthenticationModesDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this authentication service get authentication modes default response a status code equal to that given
func (o *AuthenticationServiceGetAuthenticationModesDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the authentication service get authentication modes default response
func (o *AuthenticationServiceGetAuthenticationModesDefault) Code() int {
	return o._statusCode
}

func (o *AuthenticationServiceGetAuthenticationModesDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/rest/v1/authentication/modes][%d] AuthenticationService_GetAuthenticationModes default %s", o._statusCode, payload)
}

func (o *AuthenticationServiceGetAuthenticationModesDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/rest/v1/authentication/modes][%d] AuthenticationService_GetAuthenticationModes default %s", o._statusCode, payload)
}

func (o *AuthenticationServiceGetAuthenticationModesDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *AuthenticationServiceGetAuthenticationModesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
