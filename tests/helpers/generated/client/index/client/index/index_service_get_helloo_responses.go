// Code generated by go-swagger; DO NOT EDIT.

package index

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/CHORUS-TRE/chorus-backend/tests/helpers/generated/client/index/models"
)

// IndexServiceGetHellooReader is a Reader for the IndexServiceGetHelloo structure.
type IndexServiceGetHellooReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *IndexServiceGetHellooReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewIndexServiceGetHellooOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewIndexServiceGetHellooDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewIndexServiceGetHellooOK creates a IndexServiceGetHellooOK with default headers values
func NewIndexServiceGetHellooOK() *IndexServiceGetHellooOK {
	return &IndexServiceGetHellooOK{}
}

/*
IndexServiceGetHellooOK describes a response with status code 200, with default header values.

A successful response.
*/
type IndexServiceGetHellooOK struct {
	Payload *models.ChorusGetHelloReply
}

// IsSuccess returns true when this index service get helloo o k response has a 2xx status code
func (o *IndexServiceGetHellooOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this index service get helloo o k response has a 3xx status code
func (o *IndexServiceGetHellooOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this index service get helloo o k response has a 4xx status code
func (o *IndexServiceGetHellooOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this index service get helloo o k response has a 5xx status code
func (o *IndexServiceGetHellooOK) IsServerError() bool {
	return false
}

// IsCode returns true when this index service get helloo o k response a status code equal to that given
func (o *IndexServiceGetHellooOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the index service get helloo o k response
func (o *IndexServiceGetHellooOK) Code() int {
	return 200
}

func (o *IndexServiceGetHellooOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/helloo][%d] indexServiceGetHellooOK %s", 200, payload)
}

func (o *IndexServiceGetHellooOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/helloo][%d] indexServiceGetHellooOK %s", 200, payload)
}

func (o *IndexServiceGetHellooOK) GetPayload() *models.ChorusGetHelloReply {
	return o.Payload
}

func (o *IndexServiceGetHellooOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ChorusGetHelloReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIndexServiceGetHellooDefault creates a IndexServiceGetHellooDefault with default headers values
func NewIndexServiceGetHellooDefault(code int) *IndexServiceGetHellooDefault {
	return &IndexServiceGetHellooDefault{
		_statusCode: code,
	}
}

/*
IndexServiceGetHellooDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type IndexServiceGetHellooDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// IsSuccess returns true when this index service get helloo default response has a 2xx status code
func (o *IndexServiceGetHellooDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this index service get helloo default response has a 3xx status code
func (o *IndexServiceGetHellooDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this index service get helloo default response has a 4xx status code
func (o *IndexServiceGetHellooDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this index service get helloo default response has a 5xx status code
func (o *IndexServiceGetHellooDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this index service get helloo default response a status code equal to that given
func (o *IndexServiceGetHellooDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the index service get helloo default response
func (o *IndexServiceGetHellooDefault) Code() int {
	return o._statusCode
}

func (o *IndexServiceGetHellooDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/helloo][%d] IndexService_GetHelloo default %s", o._statusCode, payload)
}

func (o *IndexServiceGetHellooDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/helloo][%d] IndexService_GetHelloo default %s", o._statusCode, payload)
}

func (o *IndexServiceGetHellooDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *IndexServiceGetHellooDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
