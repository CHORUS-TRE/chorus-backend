// Code generated by go-swagger; DO NOT EDIT.

package workbench_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/CHORUS-TRE/chorus-backend/tests/helpers/generated/client/workbench/models"
)

// WorkbenchServiceRemoveUserFromWorkbenchReader is a Reader for the WorkbenchServiceRemoveUserFromWorkbench structure.
type WorkbenchServiceRemoveUserFromWorkbenchReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *WorkbenchServiceRemoveUserFromWorkbenchReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewWorkbenchServiceRemoveUserFromWorkbenchOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewWorkbenchServiceRemoveUserFromWorkbenchDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewWorkbenchServiceRemoveUserFromWorkbenchOK creates a WorkbenchServiceRemoveUserFromWorkbenchOK with default headers values
func NewWorkbenchServiceRemoveUserFromWorkbenchOK() *WorkbenchServiceRemoveUserFromWorkbenchOK {
	return &WorkbenchServiceRemoveUserFromWorkbenchOK{}
}

/*
WorkbenchServiceRemoveUserFromWorkbenchOK describes a response with status code 200, with default header values.

A successful response.
*/
type WorkbenchServiceRemoveUserFromWorkbenchOK struct {
	Payload *models.ChorusRemoveUserFromWorkbenchReply
}

// IsSuccess returns true when this workbench service remove user from workbench o k response has a 2xx status code
func (o *WorkbenchServiceRemoveUserFromWorkbenchOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this workbench service remove user from workbench o k response has a 3xx status code
func (o *WorkbenchServiceRemoveUserFromWorkbenchOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this workbench service remove user from workbench o k response has a 4xx status code
func (o *WorkbenchServiceRemoveUserFromWorkbenchOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this workbench service remove user from workbench o k response has a 5xx status code
func (o *WorkbenchServiceRemoveUserFromWorkbenchOK) IsServerError() bool {
	return false
}

// IsCode returns true when this workbench service remove user from workbench o k response a status code equal to that given
func (o *WorkbenchServiceRemoveUserFromWorkbenchOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the workbench service remove user from workbench o k response
func (o *WorkbenchServiceRemoveUserFromWorkbenchOK) Code() int {
	return 200
}

func (o *WorkbenchServiceRemoveUserFromWorkbenchOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api/rest/v1/workbenchs/{id}/user/{userId}][%d] workbenchServiceRemoveUserFromWorkbenchOK %s", 200, payload)
}

func (o *WorkbenchServiceRemoveUserFromWorkbenchOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api/rest/v1/workbenchs/{id}/user/{userId}][%d] workbenchServiceRemoveUserFromWorkbenchOK %s", 200, payload)
}

func (o *WorkbenchServiceRemoveUserFromWorkbenchOK) GetPayload() *models.ChorusRemoveUserFromWorkbenchReply {
	return o.Payload
}

func (o *WorkbenchServiceRemoveUserFromWorkbenchOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ChorusRemoveUserFromWorkbenchReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewWorkbenchServiceRemoveUserFromWorkbenchDefault creates a WorkbenchServiceRemoveUserFromWorkbenchDefault with default headers values
func NewWorkbenchServiceRemoveUserFromWorkbenchDefault(code int) *WorkbenchServiceRemoveUserFromWorkbenchDefault {
	return &WorkbenchServiceRemoveUserFromWorkbenchDefault{
		_statusCode: code,
	}
}

/*
WorkbenchServiceRemoveUserFromWorkbenchDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type WorkbenchServiceRemoveUserFromWorkbenchDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// IsSuccess returns true when this workbench service remove user from workbench default response has a 2xx status code
func (o *WorkbenchServiceRemoveUserFromWorkbenchDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this workbench service remove user from workbench default response has a 3xx status code
func (o *WorkbenchServiceRemoveUserFromWorkbenchDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this workbench service remove user from workbench default response has a 4xx status code
func (o *WorkbenchServiceRemoveUserFromWorkbenchDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this workbench service remove user from workbench default response has a 5xx status code
func (o *WorkbenchServiceRemoveUserFromWorkbenchDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this workbench service remove user from workbench default response a status code equal to that given
func (o *WorkbenchServiceRemoveUserFromWorkbenchDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the workbench service remove user from workbench default response
func (o *WorkbenchServiceRemoveUserFromWorkbenchDefault) Code() int {
	return o._statusCode
}

func (o *WorkbenchServiceRemoveUserFromWorkbenchDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api/rest/v1/workbenchs/{id}/user/{userId}][%d] WorkbenchService_RemoveUserFromWorkbench default %s", o._statusCode, payload)
}

func (o *WorkbenchServiceRemoveUserFromWorkbenchDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api/rest/v1/workbenchs/{id}/user/{userId}][%d] WorkbenchService_RemoveUserFromWorkbench default %s", o._statusCode, payload)
}

func (o *WorkbenchServiceRemoveUserFromWorkbenchDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *WorkbenchServiceRemoveUserFromWorkbenchDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
