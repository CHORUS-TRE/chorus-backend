// Code generated by go-swagger; DO NOT EDIT.

package user_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/CHORUS-TRE/chorus-backend/tests/helpers/generated/client/devstore/models"
)

// DevstoreServiceListUserEntriesReader is a Reader for the DevstoreServiceListUserEntries structure.
type DevstoreServiceListUserEntriesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DevstoreServiceListUserEntriesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDevstoreServiceListUserEntriesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewDevstoreServiceListUserEntriesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDevstoreServiceListUserEntriesOK creates a DevstoreServiceListUserEntriesOK with default headers values
func NewDevstoreServiceListUserEntriesOK() *DevstoreServiceListUserEntriesOK {
	return &DevstoreServiceListUserEntriesOK{}
}

/*
DevstoreServiceListUserEntriesOK describes a response with status code 200, with default header values.

A successful response.
*/
type DevstoreServiceListUserEntriesOK struct {
	Payload *models.ChorusListEntriesReply
}

// IsSuccess returns true when this devstore service list user entries o k response has a 2xx status code
func (o *DevstoreServiceListUserEntriesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this devstore service list user entries o k response has a 3xx status code
func (o *DevstoreServiceListUserEntriesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this devstore service list user entries o k response has a 4xx status code
func (o *DevstoreServiceListUserEntriesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this devstore service list user entries o k response has a 5xx status code
func (o *DevstoreServiceListUserEntriesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this devstore service list user entries o k response a status code equal to that given
func (o *DevstoreServiceListUserEntriesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the devstore service list user entries o k response
func (o *DevstoreServiceListUserEntriesOK) Code() int {
	return 200
}

func (o *DevstoreServiceListUserEntriesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/rest/v1/devstore/user][%d] devstoreServiceListUserEntriesOK %s", 200, payload)
}

func (o *DevstoreServiceListUserEntriesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/rest/v1/devstore/user][%d] devstoreServiceListUserEntriesOK %s", 200, payload)
}

func (o *DevstoreServiceListUserEntriesOK) GetPayload() *models.ChorusListEntriesReply {
	return o.Payload
}

func (o *DevstoreServiceListUserEntriesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ChorusListEntriesReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDevstoreServiceListUserEntriesDefault creates a DevstoreServiceListUserEntriesDefault with default headers values
func NewDevstoreServiceListUserEntriesDefault(code int) *DevstoreServiceListUserEntriesDefault {
	return &DevstoreServiceListUserEntriesDefault{
		_statusCode: code,
	}
}

/*
DevstoreServiceListUserEntriesDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type DevstoreServiceListUserEntriesDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// IsSuccess returns true when this devstore service list user entries default response has a 2xx status code
func (o *DevstoreServiceListUserEntriesDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this devstore service list user entries default response has a 3xx status code
func (o *DevstoreServiceListUserEntriesDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this devstore service list user entries default response has a 4xx status code
func (o *DevstoreServiceListUserEntriesDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this devstore service list user entries default response has a 5xx status code
func (o *DevstoreServiceListUserEntriesDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this devstore service list user entries default response a status code equal to that given
func (o *DevstoreServiceListUserEntriesDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the devstore service list user entries default response
func (o *DevstoreServiceListUserEntriesDefault) Code() int {
	return o._statusCode
}

func (o *DevstoreServiceListUserEntriesDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/rest/v1/devstore/user][%d] DevstoreService_ListUserEntries default %s", o._statusCode, payload)
}

func (o *DevstoreServiceListUserEntriesDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/rest/v1/devstore/user][%d] DevstoreService_ListUserEntries default %s", o._statusCode, payload)
}

func (o *DevstoreServiceListUserEntriesDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *DevstoreServiceListUserEntriesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
