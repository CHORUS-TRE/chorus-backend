// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.27.2
// source: workbench-service.proto

package chorus

import (
	context "context"
	_ "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListWorkbenchesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *PaginationQuery `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListWorkbenchesRequest) Reset() {
	*x = ListWorkbenchesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workbench_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWorkbenchesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkbenchesRequest) ProtoMessage() {}

func (x *ListWorkbenchesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workbench_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkbenchesRequest.ProtoReflect.Descriptor instead.
func (*ListWorkbenchesRequest) Descriptor() ([]byte, []int) {
	return file_workbench_service_proto_rawDescGZIP(), []int{0}
}

func (x *ListWorkbenchesRequest) GetPagination() *PaginationQuery {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ListWorkbenchesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*Workbench `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListWorkbenchesReply) Reset() {
	*x = ListWorkbenchesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workbench_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWorkbenchesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkbenchesReply) ProtoMessage() {}

func (x *ListWorkbenchesReply) ProtoReflect() protoreflect.Message {
	mi := &file_workbench_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkbenchesReply.ProtoReflect.Descriptor instead.
func (*ListWorkbenchesReply) Descriptor() ([]byte, []int) {
	return file_workbench_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListWorkbenchesReply) GetResult() []*Workbench {
	if x != nil {
		return x.Result
	}
	return nil
}

type GetWorkbenchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetWorkbenchRequest) Reset() {
	*x = GetWorkbenchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workbench_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkbenchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkbenchRequest) ProtoMessage() {}

func (x *GetWorkbenchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workbench_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkbenchRequest.ProtoReflect.Descriptor instead.
func (*GetWorkbenchRequest) Descriptor() ([]byte, []int) {
	return file_workbench_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetWorkbenchRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetWorkbenchResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workbench *Workbench `protobuf:"bytes,1,opt,name=workbench,proto3" json:"workbench,omitempty"`
}

func (x *GetWorkbenchResult) Reset() {
	*x = GetWorkbenchResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workbench_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkbenchResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkbenchResult) ProtoMessage() {}

func (x *GetWorkbenchResult) ProtoReflect() protoreflect.Message {
	mi := &file_workbench_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkbenchResult.ProtoReflect.Descriptor instead.
func (*GetWorkbenchResult) Descriptor() ([]byte, []int) {
	return file_workbench_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetWorkbenchResult) GetWorkbench() *Workbench {
	if x != nil {
		return x.Workbench
	}
	return nil
}

type GetWorkbenchReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *GetWorkbenchResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *GetWorkbenchReply) Reset() {
	*x = GetWorkbenchReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workbench_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkbenchReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkbenchReply) ProtoMessage() {}

func (x *GetWorkbenchReply) ProtoReflect() protoreflect.Message {
	mi := &file_workbench_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkbenchReply.ProtoReflect.Descriptor instead.
func (*GetWorkbenchReply) Descriptor() ([]byte, []int) {
	return file_workbench_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetWorkbenchReply) GetResult() *GetWorkbenchResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type CreateWorkbenchReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *CreateWorkbenchResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *CreateWorkbenchReply) Reset() {
	*x = CreateWorkbenchReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workbench_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWorkbenchReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWorkbenchReply) ProtoMessage() {}

func (x *CreateWorkbenchReply) ProtoReflect() protoreflect.Message {
	mi := &file_workbench_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWorkbenchReply.ProtoReflect.Descriptor instead.
func (*CreateWorkbenchReply) Descriptor() ([]byte, []int) {
	return file_workbench_service_proto_rawDescGZIP(), []int{5}
}

func (x *CreateWorkbenchReply) GetResult() *CreateWorkbenchResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type CreateWorkbenchResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateWorkbenchResult) Reset() {
	*x = CreateWorkbenchResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workbench_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWorkbenchResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWorkbenchResult) ProtoMessage() {}

func (x *CreateWorkbenchResult) ProtoReflect() protoreflect.Message {
	mi := &file_workbench_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWorkbenchResult.ProtoReflect.Descriptor instead.
func (*CreateWorkbenchResult) Descriptor() ([]byte, []int) {
	return file_workbench_service_proto_rawDescGZIP(), []int{6}
}

func (x *CreateWorkbenchResult) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateWorkbenchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workbench *Workbench `protobuf:"bytes,1,opt,name=workbench,proto3" json:"workbench,omitempty"`
}

func (x *UpdateWorkbenchRequest) Reset() {
	*x = UpdateWorkbenchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workbench_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateWorkbenchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWorkbenchRequest) ProtoMessage() {}

func (x *UpdateWorkbenchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workbench_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWorkbenchRequest.ProtoReflect.Descriptor instead.
func (*UpdateWorkbenchRequest) Descriptor() ([]byte, []int) {
	return file_workbench_service_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateWorkbenchRequest) GetWorkbench() *Workbench {
	if x != nil {
		return x.Workbench
	}
	return nil
}

type UpdateWorkbenchResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateWorkbenchResult) Reset() {
	*x = UpdateWorkbenchResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workbench_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateWorkbenchResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWorkbenchResult) ProtoMessage() {}

func (x *UpdateWorkbenchResult) ProtoReflect() protoreflect.Message {
	mi := &file_workbench_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWorkbenchResult.ProtoReflect.Descriptor instead.
func (*UpdateWorkbenchResult) Descriptor() ([]byte, []int) {
	return file_workbench_service_proto_rawDescGZIP(), []int{8}
}

type UpdateWorkbenchReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *UpdateWorkbenchResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *UpdateWorkbenchReply) Reset() {
	*x = UpdateWorkbenchReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workbench_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateWorkbenchReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWorkbenchReply) ProtoMessage() {}

func (x *UpdateWorkbenchReply) ProtoReflect() protoreflect.Message {
	mi := &file_workbench_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWorkbenchReply.ProtoReflect.Descriptor instead.
func (*UpdateWorkbenchReply) Descriptor() ([]byte, []int) {
	return file_workbench_service_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateWorkbenchReply) GetResult() *UpdateWorkbenchResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type DeleteWorkbenchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteWorkbenchRequest) Reset() {
	*x = DeleteWorkbenchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workbench_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteWorkbenchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWorkbenchRequest) ProtoMessage() {}

func (x *DeleteWorkbenchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workbench_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWorkbenchRequest.ProtoReflect.Descriptor instead.
func (*DeleteWorkbenchRequest) Descriptor() ([]byte, []int) {
	return file_workbench_service_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteWorkbenchRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteWorkbenchResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteWorkbenchResult) Reset() {
	*x = DeleteWorkbenchResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workbench_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteWorkbenchResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWorkbenchResult) ProtoMessage() {}

func (x *DeleteWorkbenchResult) ProtoReflect() protoreflect.Message {
	mi := &file_workbench_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWorkbenchResult.ProtoReflect.Descriptor instead.
func (*DeleteWorkbenchResult) Descriptor() ([]byte, []int) {
	return file_workbench_service_proto_rawDescGZIP(), []int{11}
}

type DeleteWorkbenchReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *DeleteWorkbenchResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DeleteWorkbenchReply) Reset() {
	*x = DeleteWorkbenchReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workbench_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteWorkbenchReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWorkbenchReply) ProtoMessage() {}

func (x *DeleteWorkbenchReply) ProtoReflect() protoreflect.Message {
	mi := &file_workbench_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWorkbenchReply.ProtoReflect.Descriptor instead.
func (*DeleteWorkbenchReply) Descriptor() ([]byte, []int) {
	return file_workbench_service_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteWorkbenchReply) GetResult() *DeleteWorkbenchResult {
	if x != nil {
		return x.Result
	}
	return nil
}

var File_workbench_service_proto protoreflect.FileDescriptor

var file_workbench_service_proto_rawDesc = []byte{
	0x0a, 0x17, 0x77, 0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x2d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x63, 0x68, 0x6f, 0x72, 0x75,
	0x73, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e,
	0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x77, 0x6f, 0x72, 0x6b,
	0x62, 0x65, 0x6e, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x51, 0x0a, 0x16, 0x4c,
	0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x68, 0x6f, 0x72,
	0x75, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x41,
	0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x65,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x29, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e,
	0x57, 0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x25, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x45, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x57,
	0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2f,
	0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x62,
	0x65, 0x6e, 0x63, 0x68, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x22,
	0x47, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x32, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x57, 0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x4d, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x35, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x57, 0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x27, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x57, 0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x49, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x62, 0x65,
	0x6e, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x09, 0x77, 0x6f,
	0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68,
	0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x22, 0x17, 0x0a, 0x15, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x4d, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x6f,
	0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x35, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63,
	0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b,
	0x62, 0x65, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x28, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x6f, 0x72,
	0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x17, 0x0a,
	0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x4d, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x57, 0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x35,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x6f,
	0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0xd1, 0x07, 0x0a, 0x10, 0x57, 0x6f, 0x72, 0x6b, 0x62, 0x65,
	0x6e, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xb6, 0x01, 0x0a, 0x0c, 0x47,
	0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x12, 0x1b, 0x2e, 0x63, 0x68,
	0x6f, 0x72, 0x75, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x6e, 0x92, 0x41, 0x46, 0x0a, 0x10, 0x57, 0x6f, 0x72, 0x6b, 0x62, 0x65,
	0x6e, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x0f, 0x47, 0x65, 0x74, 0x20,
	0x61, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x1a, 0x21, 0x54, 0x68, 0x69,
	0x73, 0x20, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x73, 0x20, 0x61, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x2f,
	0x76, 0x31, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0x12, 0xc5, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b,
	0x62, 0x65, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x12, 0x1e, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x65, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x74, 0x92, 0x41, 0x51, 0x0a, 0x10, 0x57, 0x6f, 0x72, 0x6b,
	0x62, 0x65, 0x6e, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x10, 0x4c, 0x69,
	0x73, 0x74, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x1a, 0x2b,
	0x54, 0x68, 0x69, 0x73, 0x20, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x20, 0x72, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x73, 0x20, 0x61, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x6f, 0x66, 0x20,
	0x77, 0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1a, 0x12, 0x18, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x2f, 0x76, 0x31, 0x2f,
	0x77, 0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x12, 0xb3, 0x01, 0x0a, 0x0f,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x12,
	0x11, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e,
	0x63, 0x68, 0x1a, 0x1c, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x6f, 0x92, 0x41, 0x49, 0x0a, 0x10, 0x57, 0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20,
	0x61, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x1a, 0x21, 0x54, 0x68, 0x69,
	0x73, 0x20, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x20, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x73, 0x20, 0x61, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1d, 0x3a, 0x01, 0x2a, 0x22, 0x18, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65,
	0x73, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x65,
	0x73, 0x12, 0xc0, 0x01, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b,
	0x62, 0x65, 0x6e, 0x63, 0x68, 0x12, 0x1e, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x6f, 0x92, 0x41, 0x49, 0x0a, 0x10, 0x57, 0x6f, 0x72, 0x6b, 0x62, 0x65,
	0x6e, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x12, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x20, 0x61, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x1a, 0x21,
	0x54, 0x68, 0x69, 0x73, 0x20, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x20, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x73, 0x20, 0x61, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63,
	0x68, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x3a, 0x01, 0x2a, 0x1a, 0x18, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x72, 0x65, 0x73, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e,
	0x63, 0x68, 0x65, 0x73, 0x12, 0xc2, 0x01, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57,
	0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x12, 0x1e, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75,
	0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75,
	0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63,
	0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x71, 0x92, 0x41, 0x49, 0x0a, 0x10, 0x57, 0x6f, 0x72,
	0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x12, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x20, 0x61, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63,
	0x68, 0x1a, 0x21, 0x54, 0x68, 0x69, 0x73, 0x20, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x20, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x73, 0x20, 0x61, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x62,
	0x65, 0x6e, 0x63, 0x68, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x2a, 0x1d, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x72, 0x65, 0x73, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e,
	0x63, 0x68, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x42, 0xb3, 0x01, 0x92, 0x41, 0xa5, 0x01,
	0x12, 0x7c, 0x0a, 0x18, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x62,
	0x65, 0x6e, 0x63, 0x68, 0x20, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x5b, 0x0a, 0x18,
	0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x62, 0x65, 0x6e, 0x63, 0x68,
	0x20, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2c, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a,
	0x2f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x43, 0x48, 0x4f,
	0x52, 0x55, 0x53, 0x2d, 0x54, 0x52, 0x45, 0x2f, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2d, 0x62,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x1a, 0x11, 0x64, 0x65, 0x76, 0x40, 0x63, 0x68, 0x6f, 0x72,
	0x75, 0x73, 0x2d, 0x74, 0x72, 0x65, 0x2e, 0x63, 0x68, 0x32, 0x03, 0x31, 0x2e, 0x30, 0x2a, 0x01,
	0x01, 0x32, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a,
	0x73, 0x6f, 0x6e, 0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x5a, 0x08, 0x2e, 0x3b, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_workbench_service_proto_rawDescOnce sync.Once
	file_workbench_service_proto_rawDescData = file_workbench_service_proto_rawDesc
)

func file_workbench_service_proto_rawDescGZIP() []byte {
	file_workbench_service_proto_rawDescOnce.Do(func() {
		file_workbench_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_workbench_service_proto_rawDescData)
	})
	return file_workbench_service_proto_rawDescData
}

var file_workbench_service_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_workbench_service_proto_goTypes = []interface{}{
	(*ListWorkbenchesRequest)(nil), // 0: chorus.ListWorkbenchesRequest
	(*ListWorkbenchesReply)(nil),   // 1: chorus.ListWorkbenchesReply
	(*GetWorkbenchRequest)(nil),    // 2: chorus.GetWorkbenchRequest
	(*GetWorkbenchResult)(nil),     // 3: chorus.GetWorkbenchResult
	(*GetWorkbenchReply)(nil),      // 4: chorus.GetWorkbenchReply
	(*CreateWorkbenchReply)(nil),   // 5: chorus.CreateWorkbenchReply
	(*CreateWorkbenchResult)(nil),  // 6: chorus.CreateWorkbenchResult
	(*UpdateWorkbenchRequest)(nil), // 7: chorus.UpdateWorkbenchRequest
	(*UpdateWorkbenchResult)(nil),  // 8: chorus.UpdateWorkbenchResult
	(*UpdateWorkbenchReply)(nil),   // 9: chorus.UpdateWorkbenchReply
	(*DeleteWorkbenchRequest)(nil), // 10: chorus.DeleteWorkbenchRequest
	(*DeleteWorkbenchResult)(nil),  // 11: chorus.DeleteWorkbenchResult
	(*DeleteWorkbenchReply)(nil),   // 12: chorus.DeleteWorkbenchReply
	(*PaginationQuery)(nil),        // 13: chorus.PaginationQuery
	(*Workbench)(nil),              // 14: chorus.Workbench
}
var file_workbench_service_proto_depIdxs = []int32{
	13, // 0: chorus.ListWorkbenchesRequest.pagination:type_name -> chorus.PaginationQuery
	14, // 1: chorus.ListWorkbenchesReply.result:type_name -> chorus.Workbench
	14, // 2: chorus.GetWorkbenchResult.workbench:type_name -> chorus.Workbench
	3,  // 3: chorus.GetWorkbenchReply.result:type_name -> chorus.GetWorkbenchResult
	6,  // 4: chorus.CreateWorkbenchReply.result:type_name -> chorus.CreateWorkbenchResult
	14, // 5: chorus.UpdateWorkbenchRequest.workbench:type_name -> chorus.Workbench
	8,  // 6: chorus.UpdateWorkbenchReply.result:type_name -> chorus.UpdateWorkbenchResult
	11, // 7: chorus.DeleteWorkbenchReply.result:type_name -> chorus.DeleteWorkbenchResult
	2,  // 8: chorus.WorkbenchService.GetWorkbench:input_type -> chorus.GetWorkbenchRequest
	0,  // 9: chorus.WorkbenchService.ListWorkbenches:input_type -> chorus.ListWorkbenchesRequest
	14, // 10: chorus.WorkbenchService.CreateWorkbench:input_type -> chorus.Workbench
	7,  // 11: chorus.WorkbenchService.UpdateWorkbench:input_type -> chorus.UpdateWorkbenchRequest
	10, // 12: chorus.WorkbenchService.DeleteWorkbench:input_type -> chorus.DeleteWorkbenchRequest
	4,  // 13: chorus.WorkbenchService.GetWorkbench:output_type -> chorus.GetWorkbenchReply
	1,  // 14: chorus.WorkbenchService.ListWorkbenches:output_type -> chorus.ListWorkbenchesReply
	5,  // 15: chorus.WorkbenchService.CreateWorkbench:output_type -> chorus.CreateWorkbenchReply
	9,  // 16: chorus.WorkbenchService.UpdateWorkbench:output_type -> chorus.UpdateWorkbenchReply
	12, // 17: chorus.WorkbenchService.DeleteWorkbench:output_type -> chorus.DeleteWorkbenchReply
	13, // [13:18] is the sub-list for method output_type
	8,  // [8:13] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_workbench_service_proto_init() }
func file_workbench_service_proto_init() {
	if File_workbench_service_proto != nil {
		return
	}
	file_common_proto_init()
	file_workbench_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_workbench_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWorkbenchesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workbench_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWorkbenchesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workbench_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkbenchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workbench_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkbenchResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workbench_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkbenchReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workbench_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWorkbenchReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workbench_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWorkbenchResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workbench_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateWorkbenchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workbench_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateWorkbenchResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workbench_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateWorkbenchReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workbench_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteWorkbenchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workbench_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteWorkbenchResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workbench_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteWorkbenchReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_workbench_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_workbench_service_proto_goTypes,
		DependencyIndexes: file_workbench_service_proto_depIdxs,
		MessageInfos:      file_workbench_service_proto_msgTypes,
	}.Build()
	File_workbench_service_proto = out.File
	file_workbench_service_proto_rawDesc = nil
	file_workbench_service_proto_goTypes = nil
	file_workbench_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// WorkbenchServiceClient is the client API for WorkbenchService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WorkbenchServiceClient interface {
	GetWorkbench(ctx context.Context, in *GetWorkbenchRequest, opts ...grpc.CallOption) (*GetWorkbenchReply, error)
	ListWorkbenches(ctx context.Context, in *ListWorkbenchesRequest, opts ...grpc.CallOption) (*ListWorkbenchesReply, error)
	CreateWorkbench(ctx context.Context, in *Workbench, opts ...grpc.CallOption) (*CreateWorkbenchReply, error)
	UpdateWorkbench(ctx context.Context, in *UpdateWorkbenchRequest, opts ...grpc.CallOption) (*UpdateWorkbenchReply, error)
	DeleteWorkbench(ctx context.Context, in *DeleteWorkbenchRequest, opts ...grpc.CallOption) (*DeleteWorkbenchReply, error)
}

type workbenchServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewWorkbenchServiceClient(cc grpc.ClientConnInterface) WorkbenchServiceClient {
	return &workbenchServiceClient{cc}
}

func (c *workbenchServiceClient) GetWorkbench(ctx context.Context, in *GetWorkbenchRequest, opts ...grpc.CallOption) (*GetWorkbenchReply, error) {
	out := new(GetWorkbenchReply)
	err := c.cc.Invoke(ctx, "/chorus.WorkbenchService/GetWorkbench", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workbenchServiceClient) ListWorkbenches(ctx context.Context, in *ListWorkbenchesRequest, opts ...grpc.CallOption) (*ListWorkbenchesReply, error) {
	out := new(ListWorkbenchesReply)
	err := c.cc.Invoke(ctx, "/chorus.WorkbenchService/ListWorkbenches", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workbenchServiceClient) CreateWorkbench(ctx context.Context, in *Workbench, opts ...grpc.CallOption) (*CreateWorkbenchReply, error) {
	out := new(CreateWorkbenchReply)
	err := c.cc.Invoke(ctx, "/chorus.WorkbenchService/CreateWorkbench", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workbenchServiceClient) UpdateWorkbench(ctx context.Context, in *UpdateWorkbenchRequest, opts ...grpc.CallOption) (*UpdateWorkbenchReply, error) {
	out := new(UpdateWorkbenchReply)
	err := c.cc.Invoke(ctx, "/chorus.WorkbenchService/UpdateWorkbench", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workbenchServiceClient) DeleteWorkbench(ctx context.Context, in *DeleteWorkbenchRequest, opts ...grpc.CallOption) (*DeleteWorkbenchReply, error) {
	out := new(DeleteWorkbenchReply)
	err := c.cc.Invoke(ctx, "/chorus.WorkbenchService/DeleteWorkbench", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WorkbenchServiceServer is the server API for WorkbenchService service.
type WorkbenchServiceServer interface {
	GetWorkbench(context.Context, *GetWorkbenchRequest) (*GetWorkbenchReply, error)
	ListWorkbenches(context.Context, *ListWorkbenchesRequest) (*ListWorkbenchesReply, error)
	CreateWorkbench(context.Context, *Workbench) (*CreateWorkbenchReply, error)
	UpdateWorkbench(context.Context, *UpdateWorkbenchRequest) (*UpdateWorkbenchReply, error)
	DeleteWorkbench(context.Context, *DeleteWorkbenchRequest) (*DeleteWorkbenchReply, error)
}

// UnimplementedWorkbenchServiceServer can be embedded to have forward compatible implementations.
type UnimplementedWorkbenchServiceServer struct {
}

func (*UnimplementedWorkbenchServiceServer) GetWorkbench(context.Context, *GetWorkbenchRequest) (*GetWorkbenchReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWorkbench not implemented")
}
func (*UnimplementedWorkbenchServiceServer) ListWorkbenches(context.Context, *ListWorkbenchesRequest) (*ListWorkbenchesReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListWorkbenches not implemented")
}
func (*UnimplementedWorkbenchServiceServer) CreateWorkbench(context.Context, *Workbench) (*CreateWorkbenchReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateWorkbench not implemented")
}
func (*UnimplementedWorkbenchServiceServer) UpdateWorkbench(context.Context, *UpdateWorkbenchRequest) (*UpdateWorkbenchReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateWorkbench not implemented")
}
func (*UnimplementedWorkbenchServiceServer) DeleteWorkbench(context.Context, *DeleteWorkbenchRequest) (*DeleteWorkbenchReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteWorkbench not implemented")
}

func RegisterWorkbenchServiceServer(s *grpc.Server, srv WorkbenchServiceServer) {
	s.RegisterService(&_WorkbenchService_serviceDesc, srv)
}

func _WorkbenchService_GetWorkbench_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWorkbenchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkbenchServiceServer).GetWorkbench(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chorus.WorkbenchService/GetWorkbench",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkbenchServiceServer).GetWorkbench(ctx, req.(*GetWorkbenchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkbenchService_ListWorkbenches_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListWorkbenchesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkbenchServiceServer).ListWorkbenches(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chorus.WorkbenchService/ListWorkbenches",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkbenchServiceServer).ListWorkbenches(ctx, req.(*ListWorkbenchesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkbenchService_CreateWorkbench_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Workbench)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkbenchServiceServer).CreateWorkbench(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chorus.WorkbenchService/CreateWorkbench",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkbenchServiceServer).CreateWorkbench(ctx, req.(*Workbench))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkbenchService_UpdateWorkbench_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateWorkbenchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkbenchServiceServer).UpdateWorkbench(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chorus.WorkbenchService/UpdateWorkbench",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkbenchServiceServer).UpdateWorkbench(ctx, req.(*UpdateWorkbenchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkbenchService_DeleteWorkbench_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteWorkbenchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkbenchServiceServer).DeleteWorkbench(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chorus.WorkbenchService/DeleteWorkbench",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkbenchServiceServer).DeleteWorkbench(ctx, req.(*DeleteWorkbenchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _WorkbenchService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chorus.WorkbenchService",
	HandlerType: (*WorkbenchServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetWorkbench",
			Handler:    _WorkbenchService_GetWorkbench_Handler,
		},
		{
			MethodName: "ListWorkbenches",
			Handler:    _WorkbenchService_ListWorkbenches_Handler,
		},
		{
			MethodName: "CreateWorkbench",
			Handler:    _WorkbenchService_CreateWorkbench_Handler,
		},
		{
			MethodName: "UpdateWorkbench",
			Handler:    _WorkbenchService_UpdateWorkbench_Handler,
		},
		{
			MethodName: "DeleteWorkbench",
			Handler:    _WorkbenchService_DeleteWorkbench_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "workbench-service.proto",
}
