// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v6.30.2
// source: devstore-service.proto

package chorus

import (
	context "context"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListEntriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListEntriesRequest) Reset() {
	*x = ListEntriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devstore_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEntriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEntriesRequest) ProtoMessage() {}

func (x *ListEntriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devstore_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEntriesRequest.ProtoReflect.Descriptor instead.
func (*ListEntriesRequest) Descriptor() ([]byte, []int) {
	return file_devstore_service_proto_rawDescGZIP(), []int{0}
}

type ListEntriesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *ListEntriesResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ListEntriesReply) Reset() {
	*x = ListEntriesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devstore_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEntriesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEntriesReply) ProtoMessage() {}

func (x *ListEntriesReply) ProtoReflect() protoreflect.Message {
	mi := &file_devstore_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEntriesReply.ProtoReflect.Descriptor instead.
func (*ListEntriesReply) Descriptor() ([]byte, []int) {
	return file_devstore_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListEntriesReply) GetResult() *ListEntriesResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type ListEntriesResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries map[string]string `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ListEntriesResult) Reset() {
	*x = ListEntriesResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devstore_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEntriesResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEntriesResult) ProtoMessage() {}

func (x *ListEntriesResult) ProtoReflect() protoreflect.Message {
	mi := &file_devstore_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEntriesResult.ProtoReflect.Descriptor instead.
func (*ListEntriesResult) Descriptor() ([]byte, []int) {
	return file_devstore_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListEntriesResult) GetEntries() map[string]string {
	if x != nil {
		return x.Entries
	}
	return nil
}

type GetEntryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *GetEntryRequest) Reset() {
	*x = GetEntryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devstore_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEntryRequest) ProtoMessage() {}

func (x *GetEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devstore_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEntryRequest.ProtoReflect.Descriptor instead.
func (*GetEntryRequest) Descriptor() ([]byte, []int) {
	return file_devstore_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetEntryRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type GetEntryReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *GetEntryResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *GetEntryReply) Reset() {
	*x = GetEntryReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devstore_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEntryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEntryReply) ProtoMessage() {}

func (x *GetEntryReply) ProtoReflect() protoreflect.Message {
	mi := &file_devstore_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEntryReply.ProtoReflect.Descriptor instead.
func (*GetEntryReply) Descriptor() ([]byte, []int) {
	return file_devstore_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetEntryReply) GetResult() *GetEntryResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type GetEntryResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetEntryResult) Reset() {
	*x = GetEntryResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devstore_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEntryResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEntryResult) ProtoMessage() {}

func (x *GetEntryResult) ProtoReflect() protoreflect.Message {
	mi := &file_devstore_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEntryResult.ProtoReflect.Descriptor instead.
func (*GetEntryResult) Descriptor() ([]byte, []int) {
	return file_devstore_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetEntryResult) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GetEntryResult) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type PutEntryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *PutEntryRequest) Reset() {
	*x = PutEntryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devstore_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutEntryRequest) ProtoMessage() {}

func (x *PutEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devstore_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutEntryRequest.ProtoReflect.Descriptor instead.
func (*PutEntryRequest) Descriptor() ([]byte, []int) {
	return file_devstore_service_proto_rawDescGZIP(), []int{6}
}

func (x *PutEntryRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *PutEntryRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type PutEntryReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *PutEntryResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *PutEntryReply) Reset() {
	*x = PutEntryReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devstore_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutEntryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutEntryReply) ProtoMessage() {}

func (x *PutEntryReply) ProtoReflect() protoreflect.Message {
	mi := &file_devstore_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutEntryReply.ProtoReflect.Descriptor instead.
func (*PutEntryReply) Descriptor() ([]byte, []int) {
	return file_devstore_service_proto_rawDescGZIP(), []int{7}
}

func (x *PutEntryReply) GetResult() *PutEntryResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type PutEntryResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *PutEntryResult) Reset() {
	*x = PutEntryResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devstore_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutEntryResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutEntryResult) ProtoMessage() {}

func (x *PutEntryResult) ProtoReflect() protoreflect.Message {
	mi := &file_devstore_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutEntryResult.ProtoReflect.Descriptor instead.
func (*PutEntryResult) Descriptor() ([]byte, []int) {
	return file_devstore_service_proto_rawDescGZIP(), []int{8}
}

func (x *PutEntryResult) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *PutEntryResult) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type DeleteEntryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *DeleteEntryRequest) Reset() {
	*x = DeleteEntryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devstore_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEntryRequest) ProtoMessage() {}

func (x *DeleteEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devstore_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEntryRequest.ProtoReflect.Descriptor instead.
func (*DeleteEntryRequest) Descriptor() ([]byte, []int) {
	return file_devstore_service_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteEntryRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type DeleteEntryReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *DeleteEntryResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DeleteEntryReply) Reset() {
	*x = DeleteEntryReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devstore_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteEntryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEntryReply) ProtoMessage() {}

func (x *DeleteEntryReply) ProtoReflect() protoreflect.Message {
	mi := &file_devstore_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEntryReply.ProtoReflect.Descriptor instead.
func (*DeleteEntryReply) Descriptor() ([]byte, []int) {
	return file_devstore_service_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteEntryReply) GetResult() *DeleteEntryResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type DeleteEntryResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteEntryResult) Reset() {
	*x = DeleteEntryResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devstore_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteEntryResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEntryResult) ProtoMessage() {}

func (x *DeleteEntryResult) ProtoReflect() protoreflect.Message {
	mi := &file_devstore_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEntryResult.ProtoReflect.Descriptor instead.
func (*DeleteEntryResult) Descriptor() ([]byte, []int) {
	return file_devstore_service_proto_rawDescGZIP(), []int{11}
}

type ListWorkspaceEntriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ListWorkspaceEntriesRequest) Reset() {
	*x = ListWorkspaceEntriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devstore_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWorkspaceEntriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkspaceEntriesRequest) ProtoMessage() {}

func (x *ListWorkspaceEntriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devstore_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkspaceEntriesRequest.ProtoReflect.Descriptor instead.
func (*ListWorkspaceEntriesRequest) Descriptor() ([]byte, []int) {
	return file_devstore_service_proto_rawDescGZIP(), []int{12}
}

func (x *ListWorkspaceEntriesRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetWorkspaceEntryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Key string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *GetWorkspaceEntryRequest) Reset() {
	*x = GetWorkspaceEntryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devstore_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkspaceEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkspaceEntryRequest) ProtoMessage() {}

func (x *GetWorkspaceEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devstore_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkspaceEntryRequest.ProtoReflect.Descriptor instead.
func (*GetWorkspaceEntryRequest) Descriptor() ([]byte, []int) {
	return file_devstore_service_proto_rawDescGZIP(), []int{13}
}

func (x *GetWorkspaceEntryRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetWorkspaceEntryRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type PutWorkspaceEntryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Key   string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *PutWorkspaceEntryRequest) Reset() {
	*x = PutWorkspaceEntryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devstore_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutWorkspaceEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutWorkspaceEntryRequest) ProtoMessage() {}

func (x *PutWorkspaceEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devstore_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutWorkspaceEntryRequest.ProtoReflect.Descriptor instead.
func (*PutWorkspaceEntryRequest) Descriptor() ([]byte, []int) {
	return file_devstore_service_proto_rawDescGZIP(), []int{14}
}

func (x *PutWorkspaceEntryRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PutWorkspaceEntryRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *PutWorkspaceEntryRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type DeleteWorkspaceEntryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Key string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *DeleteWorkspaceEntryRequest) Reset() {
	*x = DeleteWorkspaceEntryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devstore_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteWorkspaceEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWorkspaceEntryRequest) ProtoMessage() {}

func (x *DeleteWorkspaceEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devstore_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWorkspaceEntryRequest.ProtoReflect.Descriptor instead.
func (*DeleteWorkspaceEntryRequest) Descriptor() ([]byte, []int) {
	return file_devstore_service_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteWorkspaceEntryRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeleteWorkspaceEntryRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

var File_devstore_service_proto protoreflect.FileDescriptor

var file_devstore_service_proto_rawDesc = []byte{
	0x0a, 0x16, 0x64, 0x65, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61,
	0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x14, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74,
	0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x45, 0x0a, 0x10, 0x4c,
	0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x31, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74,
	0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x91, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x40, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x68, 0x6f, 0x72,
	0x75, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x45, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x23, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x3f, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2e, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63,
	0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x38, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x39, 0x0a, 0x0f, 0x50, 0x75, 0x74, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x3f, 0x0a, 0x0d, 0x50, 0x75, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x2e, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x50, 0x75, 0x74, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x38, 0x0a, 0x0e, 0x50, 0x75, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x26, 0x0a, 0x12,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x22, 0x45, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x31, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75,
	0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x13, 0x0a, 0x11, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x2d, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x3c, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x52, 0x0a,
	0x18, 0x50, 0x75, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x3f, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x32, 0xbe, 0x18, 0x0a, 0x0f, 0x44, 0x65, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xfe, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x47,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x1a, 0x2e, 0x63,
	0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75,
	0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0xb2, 0x01, 0x92, 0x41, 0x86, 0x01, 0x0a, 0x0d, 0x47, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x20, 0x61,
	0x6c, 0x6c, 0x20, 0x6b, 0x65, 0x79, 0x2f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x65, 0x6e, 0x74,
	0x72, 0x69, 0x65, 0x73, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x67, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x20, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x1a, 0x43, 0x54, 0x68, 0x69, 0x73, 0x20, 0x65,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x20, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65,
	0x73, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x6b, 0x65, 0x79, 0x2f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20,
	0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x20, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x62, 0x00, 0x88,
	0xb5, 0x18, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x12, 0x1c, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x72, 0x65, 0x73, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x12, 0xfb, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x47,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x17, 0x2e, 0x63, 0x68, 0x6f,
	0x72, 0x75, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xb8, 0x01, 0x92, 0x41, 0x86,
	0x01, 0x0a, 0x0d, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x2b, 0x47, 0x65, 0x74, 0x20, 0x61, 0x20, 0x6b, 0x65, 0x79, 0x2f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x20, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x20, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x1a, 0x46, 0x54,
	0x68, 0x69, 0x73, 0x20, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x20, 0x72, 0x65, 0x74,
	0x72, 0x69, 0x65, 0x76, 0x65, 0x73, 0x20, 0x61, 0x20, 0x6b, 0x65, 0x79, 0x2f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x20, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x20, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x20, 0x62,
	0x79, 0x20, 0x6b, 0x65, 0x79, 0x62, 0x00, 0x88, 0xb5, 0x18, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x24, 0x12, 0x22, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x2f, 0x76, 0x31, 0x2f,
	0x64, 0x65, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2f,
	0x7b, 0x6b, 0x65, 0x79, 0x7d, 0x12, 0xf5, 0x01, 0x0a, 0x0e, 0x50, 0x75, 0x74, 0x47, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x17, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75,
	0x73, 0x2e, 0x50, 0x75, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x15, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x50, 0x75, 0x74, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xb2, 0x01, 0x92, 0x41, 0x87, 0x01, 0x0a,
	0x0d, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2d,
	0x50, 0x75, 0x74, 0x20, 0x61, 0x20, 0x6b, 0x65, 0x79, 0x2f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20,
	0x65, 0x6e, 0x74, 0x72, 0x79, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x64, 0x65, 0x76,
	0x20, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x20, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x1a, 0x45, 0x54,
	0x68, 0x69, 0x73, 0x20, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x20, 0x61, 0x6c, 0x6c,
	0x6f, 0x77, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x70, 0x75, 0x74, 0x20, 0x61, 0x20, 0x6b, 0x65, 0x79,
	0x2f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x20, 0x69, 0x6e, 0x20,
	0x74, 0x68, 0x65, 0x20, 0x64, 0x65, 0x76, 0x20, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x20, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x62, 0x00, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x3a, 0x01, 0x2a, 0x22,
	0x1c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65,
	0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x12, 0x81, 0x02,
	0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x1a, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x18, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xb5, 0x01, 0x92, 0x41, 0x87, 0x01,
	0x0a, 0x0d, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x20, 0x61, 0x20, 0x6b, 0x65, 0x79, 0x2f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x20, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x20, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x1a,
	0x44, 0x54, 0x68, 0x69, 0x73, 0x20, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x20, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x73, 0x20, 0x61, 0x20, 0x6b, 0x65, 0x79, 0x2f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x20, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x20, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x20, 0x62,
	0x79, 0x20, 0x6b, 0x65, 0x79, 0x62, 0x00, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x2a, 0x22, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x76, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2f, 0x7b, 0x6b, 0x65, 0x79,
	0x7d, 0x12, 0xf0, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x1a, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x18, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45,
	0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xa6, 0x01, 0x92, 0x41,
	0x80, 0x01, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x2c, 0x4c, 0x69, 0x73, 0x74, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x6b, 0x65, 0x79, 0x2f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x20, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x20, 0x69, 0x6e, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x75, 0x73, 0x65, 0x72, 0x20, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x1a, 0x41, 0x54,
	0x68, 0x69, 0x73, 0x20, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x20, 0x72, 0x65, 0x74,
	0x72, 0x69, 0x65, 0x76, 0x65, 0x73, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x6b, 0x65, 0x79, 0x2f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x20, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x20, 0x66, 0x72, 0x6f,
	0x6d, 0x20, 0x74, 0x68, 0x65, 0x20, 0x75, 0x73, 0x65, 0x72, 0x20, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x62, 0x00, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72,
	0x65, 0x73, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f,
	0x75, 0x73, 0x65, 0x72, 0x12, 0xed, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x17, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15,
	0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xac, 0x01, 0x92, 0x41, 0x80, 0x01, 0x0a, 0x0b, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x29, 0x47, 0x65, 0x74, 0x20, 0x61,
	0x20, 0x6b, 0x65, 0x79, 0x2f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x65, 0x6e, 0x74, 0x72, 0x79,
	0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x74, 0x68, 0x65, 0x20, 0x75, 0x73, 0x65, 0x72, 0x20, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x1a, 0x44, 0x54, 0x68, 0x69, 0x73, 0x20, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x20, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x73, 0x20, 0x61, 0x20,
	0x6b, 0x65, 0x79, 0x2f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x20,
	0x66, 0x72, 0x6f, 0x6d, 0x20, 0x74, 0x68, 0x65, 0x20, 0x75, 0x73, 0x65, 0x72, 0x20, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x20, 0x62, 0x79, 0x20, 0x6b, 0x65, 0x79, 0x62, 0x00, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x22, 0x12, 0x20, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x2f, 0x76, 0x31,
	0x2f, 0x64, 0x65, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x7b,
	0x6b, 0x65, 0x79, 0x7d, 0x12, 0xeb, 0x01, 0x0a, 0x0c, 0x50, 0x75, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x17, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x50,
	0x75, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15,
	0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x50, 0x75, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xaa, 0x01, 0x92, 0x41, 0x81, 0x01, 0x0a, 0x0b, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2b, 0x50, 0x75, 0x74, 0x20, 0x61,
	0x20, 0x6b, 0x65, 0x79, 0x2f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x65, 0x6e, 0x74, 0x72, 0x79,
	0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x64, 0x65, 0x76, 0x20, 0x75, 0x73, 0x65, 0x72,
	0x20, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x1a, 0x43, 0x54, 0x68, 0x69, 0x73, 0x20, 0x65, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x20, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x73, 0x20, 0x74, 0x6f, 0x20,
	0x70, 0x75, 0x74, 0x20, 0x61, 0x20, 0x6b, 0x65, 0x79, 0x2f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20,
	0x65, 0x6e, 0x74, 0x72, 0x79, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x64, 0x65, 0x76,
	0x20, 0x75, 0x73, 0x65, 0x72, 0x20, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x62, 0x00, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1f, 0x3a, 0x01, 0x2a, 0x22, 0x1a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x73,
	0x74, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x12, 0xf7, 0x01, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1a, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x18, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xad, 0x01, 0x92,
	0x41, 0x81, 0x01, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x2c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x20, 0x61, 0x20, 0x6b, 0x65, 0x79, 0x2f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x20, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20,
	0x74, 0x68, 0x65, 0x20, 0x75, 0x73, 0x65, 0x72, 0x20, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x1a, 0x42,
	0x54, 0x68, 0x69, 0x73, 0x20, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x20, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x73, 0x20, 0x61, 0x20, 0x6b, 0x65, 0x79, 0x2f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x20, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x75, 0x73, 0x65, 0x72, 0x20, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x20, 0x62, 0x79, 0x20, 0x6b,
	0x65, 0x79, 0x62, 0x00, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x2a, 0x20, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x72, 0x65, 0x73, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x76, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x7b, 0x6b, 0x65, 0x79, 0x7d, 0x12, 0x97, 0x02, 0x0a,
	0x14, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x45, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x23, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x45, 0x6e, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x63, 0x68, 0x6f,
	0x72, 0x75, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0xbf, 0x01, 0x92, 0x41, 0x8f, 0x01, 0x0a, 0x10, 0x57, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x31, 0x4c,
	0x69, 0x73, 0x74, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x6b, 0x65, 0x79, 0x2f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x20, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x1a, 0x46, 0x54, 0x68, 0x69, 0x73, 0x20, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x20,
	0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x73, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x6b, 0x65,
	0x79, 0x2f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x20,
	0x66, 0x72, 0x6f, 0x6d, 0x20, 0x74, 0x68, 0x65, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x20, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x62, 0x00, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26,
	0x12, 0x24, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x64,
	0x65, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x94, 0x02, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x57, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x20, 0x2e, 0x63,
	0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15,
	0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xc5, 0x01, 0x92, 0x41, 0x8f, 0x01, 0x0a, 0x10, 0x57, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2e,
	0x47, 0x65, 0x74, 0x20, 0x61, 0x20, 0x6b, 0x65, 0x79, 0x2f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20,
	0x65, 0x6e, 0x74, 0x72, 0x79, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x74, 0x68, 0x65, 0x20, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x1a, 0x49,
	0x54, 0x68, 0x69, 0x73, 0x20, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x20, 0x72, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x73, 0x20, 0x61, 0x20, 0x6b, 0x65, 0x79, 0x2f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x20, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x20, 0x62, 0x79, 0x20, 0x6b, 0x65, 0x79, 0x62, 0x00, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x2c, 0x12, 0x2a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x2f, 0x76, 0x31, 0x2f,
	0x64, 0x65, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x7b, 0x6b, 0x65, 0x79, 0x7d, 0x12, 0x92, 0x02,
	0x0a, 0x11, 0x50, 0x75, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x20, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x50, 0x75, 0x74,
	0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x50,
	0x75, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xc3, 0x01, 0x92,
	0x41, 0x90, 0x01, 0x0a, 0x10, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x30, 0x50, 0x75, 0x74, 0x20, 0x61, 0x20, 0x6b, 0x65, 0x79,
	0x2f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x20, 0x69, 0x6e, 0x20,
	0x74, 0x68, 0x65, 0x20, 0x64, 0x65, 0x76, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x20, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x1a, 0x48, 0x54, 0x68, 0x69, 0x73, 0x20, 0x65, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x20, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x73, 0x20, 0x74, 0x6f,
	0x20, 0x70, 0x75, 0x74, 0x20, 0x61, 0x20, 0x6b, 0x65, 0x79, 0x2f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x20, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x64, 0x65,
	0x76, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x62, 0x00, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x3a, 0x01, 0x2a, 0x22, 0x24, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x76, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2f, 0x7b, 0x69,
	0x64, 0x7d, 0x12, 0x9e, 0x02, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x23, 0x2e, 0x63, 0x68,
	0x6f, 0x72, 0x75, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x18, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xc6, 0x01, 0x92, 0x41, 0x90,
	0x01, 0x0a, 0x10, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x31, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x20, 0x61, 0x20, 0x6b, 0x65,
	0x79, 0x2f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x20, 0x66, 0x72,
	0x6f, 0x6d, 0x20, 0x74, 0x68, 0x65, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x20, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x1a, 0x47, 0x54, 0x68, 0x69, 0x73, 0x20, 0x65, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x20, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x73, 0x20, 0x61, 0x20,
	0x6b, 0x65, 0x79, 0x2f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x20,
	0x66, 0x72, 0x6f, 0x6d, 0x20, 0x74, 0x68, 0x65, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x20, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x20, 0x62, 0x79, 0x20, 0x6b, 0x65, 0x79, 0x62,
	0x00, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x2a, 0x2a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65,
	0x73, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x7b, 0x6b,
	0x65, 0x79, 0x7d, 0x42, 0xb3, 0x01, 0x92, 0x41, 0xa5, 0x01, 0x12, 0x7c, 0x0a, 0x18, 0x63, 0x68,
	0x6f, 0x72, 0x75, 0x73, 0x20, 0x64, 0x65, 0x76, 0x20, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x20, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x5b, 0x0a, 0x18, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73,
	0x20, 0x64, 0x65, 0x76, 0x20, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x20, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x2c, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x43, 0x48, 0x4f, 0x52, 0x55, 0x53, 0x2d, 0x54, 0x52,
	0x45, 0x2f, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2d, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64,
	0x1a, 0x11, 0x64, 0x65, 0x76, 0x40, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2d, 0x74, 0x72, 0x65,
	0x2e, 0x63, 0x68, 0x32, 0x03, 0x31, 0x2e, 0x30, 0x2a, 0x01, 0x01, 0x32, 0x10, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x10, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x5a,
	0x08, 0x2e, 0x3b, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_devstore_service_proto_rawDescOnce sync.Once
	file_devstore_service_proto_rawDescData = file_devstore_service_proto_rawDesc
)

func file_devstore_service_proto_rawDescGZIP() []byte {
	file_devstore_service_proto_rawDescOnce.Do(func() {
		file_devstore_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_devstore_service_proto_rawDescData)
	})
	return file_devstore_service_proto_rawDescData
}

var file_devstore_service_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_devstore_service_proto_goTypes = []interface{}{
	(*ListEntriesRequest)(nil),          // 0: chorus.ListEntriesRequest
	(*ListEntriesReply)(nil),            // 1: chorus.ListEntriesReply
	(*ListEntriesResult)(nil),           // 2: chorus.ListEntriesResult
	(*GetEntryRequest)(nil),             // 3: chorus.GetEntryRequest
	(*GetEntryReply)(nil),               // 4: chorus.GetEntryReply
	(*GetEntryResult)(nil),              // 5: chorus.GetEntryResult
	(*PutEntryRequest)(nil),             // 6: chorus.PutEntryRequest
	(*PutEntryReply)(nil),               // 7: chorus.PutEntryReply
	(*PutEntryResult)(nil),              // 8: chorus.PutEntryResult
	(*DeleteEntryRequest)(nil),          // 9: chorus.DeleteEntryRequest
	(*DeleteEntryReply)(nil),            // 10: chorus.DeleteEntryReply
	(*DeleteEntryResult)(nil),           // 11: chorus.DeleteEntryResult
	(*ListWorkspaceEntriesRequest)(nil), // 12: chorus.ListWorkspaceEntriesRequest
	(*GetWorkspaceEntryRequest)(nil),    // 13: chorus.GetWorkspaceEntryRequest
	(*PutWorkspaceEntryRequest)(nil),    // 14: chorus.PutWorkspaceEntryRequest
	(*DeleteWorkspaceEntryRequest)(nil), // 15: chorus.DeleteWorkspaceEntryRequest
	nil,                                 // 16: chorus.ListEntriesResult.EntriesEntry
}
var file_devstore_service_proto_depIdxs = []int32{
	2,  // 0: chorus.ListEntriesReply.result:type_name -> chorus.ListEntriesResult
	16, // 1: chorus.ListEntriesResult.entries:type_name -> chorus.ListEntriesResult.EntriesEntry
	5,  // 2: chorus.GetEntryReply.result:type_name -> chorus.GetEntryResult
	8,  // 3: chorus.PutEntryReply.result:type_name -> chorus.PutEntryResult
	11, // 4: chorus.DeleteEntryReply.result:type_name -> chorus.DeleteEntryResult
	0,  // 5: chorus.DevstoreService.ListGlobalEntries:input_type -> chorus.ListEntriesRequest
	3,  // 6: chorus.DevstoreService.GetGlobalEntry:input_type -> chorus.GetEntryRequest
	6,  // 7: chorus.DevstoreService.PutGlobalEntry:input_type -> chorus.PutEntryRequest
	9,  // 8: chorus.DevstoreService.DeleteGlobalEntry:input_type -> chorus.DeleteEntryRequest
	0,  // 9: chorus.DevstoreService.ListUserEntries:input_type -> chorus.ListEntriesRequest
	3,  // 10: chorus.DevstoreService.GetUserEntry:input_type -> chorus.GetEntryRequest
	6,  // 11: chorus.DevstoreService.PutUserEntry:input_type -> chorus.PutEntryRequest
	9,  // 12: chorus.DevstoreService.DeleteUserEntry:input_type -> chorus.DeleteEntryRequest
	12, // 13: chorus.DevstoreService.ListWorkspaceEntries:input_type -> chorus.ListWorkspaceEntriesRequest
	13, // 14: chorus.DevstoreService.GetWorkspaceEntry:input_type -> chorus.GetWorkspaceEntryRequest
	14, // 15: chorus.DevstoreService.PutWorkspaceEntry:input_type -> chorus.PutWorkspaceEntryRequest
	15, // 16: chorus.DevstoreService.DeleteWorkspaceEntry:input_type -> chorus.DeleteWorkspaceEntryRequest
	1,  // 17: chorus.DevstoreService.ListGlobalEntries:output_type -> chorus.ListEntriesReply
	4,  // 18: chorus.DevstoreService.GetGlobalEntry:output_type -> chorus.GetEntryReply
	7,  // 19: chorus.DevstoreService.PutGlobalEntry:output_type -> chorus.PutEntryReply
	10, // 20: chorus.DevstoreService.DeleteGlobalEntry:output_type -> chorus.DeleteEntryReply
	1,  // 21: chorus.DevstoreService.ListUserEntries:output_type -> chorus.ListEntriesReply
	4,  // 22: chorus.DevstoreService.GetUserEntry:output_type -> chorus.GetEntryReply
	7,  // 23: chorus.DevstoreService.PutUserEntry:output_type -> chorus.PutEntryReply
	10, // 24: chorus.DevstoreService.DeleteUserEntry:output_type -> chorus.DeleteEntryReply
	1,  // 25: chorus.DevstoreService.ListWorkspaceEntries:output_type -> chorus.ListEntriesReply
	4,  // 26: chorus.DevstoreService.GetWorkspaceEntry:output_type -> chorus.GetEntryReply
	7,  // 27: chorus.DevstoreService.PutWorkspaceEntry:output_type -> chorus.PutEntryReply
	10, // 28: chorus.DevstoreService.DeleteWorkspaceEntry:output_type -> chorus.DeleteEntryReply
	17, // [17:29] is the sub-list for method output_type
	5,  // [5:17] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_devstore_service_proto_init() }
func file_devstore_service_proto_init() {
	if File_devstore_service_proto != nil {
		return
	}
	file_public_endpoint_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_devstore_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEntriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devstore_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEntriesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devstore_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEntriesResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devstore_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEntryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devstore_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEntryReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devstore_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEntryResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devstore_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutEntryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devstore_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutEntryReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devstore_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutEntryResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devstore_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteEntryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devstore_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteEntryReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devstore_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteEntryResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devstore_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWorkspaceEntriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devstore_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkspaceEntryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devstore_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutWorkspaceEntryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devstore_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteWorkspaceEntryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_devstore_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_devstore_service_proto_goTypes,
		DependencyIndexes: file_devstore_service_proto_depIdxs,
		MessageInfos:      file_devstore_service_proto_msgTypes,
	}.Build()
	File_devstore_service_proto = out.File
	file_devstore_service_proto_rawDesc = nil
	file_devstore_service_proto_goTypes = nil
	file_devstore_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DevstoreServiceClient is the client API for DevstoreService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DevstoreServiceClient interface {
	ListGlobalEntries(ctx context.Context, in *ListEntriesRequest, opts ...grpc.CallOption) (*ListEntriesReply, error)
	GetGlobalEntry(ctx context.Context, in *GetEntryRequest, opts ...grpc.CallOption) (*GetEntryReply, error)
	PutGlobalEntry(ctx context.Context, in *PutEntryRequest, opts ...grpc.CallOption) (*PutEntryReply, error)
	DeleteGlobalEntry(ctx context.Context, in *DeleteEntryRequest, opts ...grpc.CallOption) (*DeleteEntryReply, error)
	ListUserEntries(ctx context.Context, in *ListEntriesRequest, opts ...grpc.CallOption) (*ListEntriesReply, error)
	GetUserEntry(ctx context.Context, in *GetEntryRequest, opts ...grpc.CallOption) (*GetEntryReply, error)
	PutUserEntry(ctx context.Context, in *PutEntryRequest, opts ...grpc.CallOption) (*PutEntryReply, error)
	DeleteUserEntry(ctx context.Context, in *DeleteEntryRequest, opts ...grpc.CallOption) (*DeleteEntryReply, error)
	ListWorkspaceEntries(ctx context.Context, in *ListWorkspaceEntriesRequest, opts ...grpc.CallOption) (*ListEntriesReply, error)
	GetWorkspaceEntry(ctx context.Context, in *GetWorkspaceEntryRequest, opts ...grpc.CallOption) (*GetEntryReply, error)
	PutWorkspaceEntry(ctx context.Context, in *PutWorkspaceEntryRequest, opts ...grpc.CallOption) (*PutEntryReply, error)
	DeleteWorkspaceEntry(ctx context.Context, in *DeleteWorkspaceEntryRequest, opts ...grpc.CallOption) (*DeleteEntryReply, error)
}

type devstoreServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDevstoreServiceClient(cc grpc.ClientConnInterface) DevstoreServiceClient {
	return &devstoreServiceClient{cc}
}

func (c *devstoreServiceClient) ListGlobalEntries(ctx context.Context, in *ListEntriesRequest, opts ...grpc.CallOption) (*ListEntriesReply, error) {
	out := new(ListEntriesReply)
	err := c.cc.Invoke(ctx, "/chorus.DevstoreService/ListGlobalEntries", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *devstoreServiceClient) GetGlobalEntry(ctx context.Context, in *GetEntryRequest, opts ...grpc.CallOption) (*GetEntryReply, error) {
	out := new(GetEntryReply)
	err := c.cc.Invoke(ctx, "/chorus.DevstoreService/GetGlobalEntry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *devstoreServiceClient) PutGlobalEntry(ctx context.Context, in *PutEntryRequest, opts ...grpc.CallOption) (*PutEntryReply, error) {
	out := new(PutEntryReply)
	err := c.cc.Invoke(ctx, "/chorus.DevstoreService/PutGlobalEntry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *devstoreServiceClient) DeleteGlobalEntry(ctx context.Context, in *DeleteEntryRequest, opts ...grpc.CallOption) (*DeleteEntryReply, error) {
	out := new(DeleteEntryReply)
	err := c.cc.Invoke(ctx, "/chorus.DevstoreService/DeleteGlobalEntry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *devstoreServiceClient) ListUserEntries(ctx context.Context, in *ListEntriesRequest, opts ...grpc.CallOption) (*ListEntriesReply, error) {
	out := new(ListEntriesReply)
	err := c.cc.Invoke(ctx, "/chorus.DevstoreService/ListUserEntries", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *devstoreServiceClient) GetUserEntry(ctx context.Context, in *GetEntryRequest, opts ...grpc.CallOption) (*GetEntryReply, error) {
	out := new(GetEntryReply)
	err := c.cc.Invoke(ctx, "/chorus.DevstoreService/GetUserEntry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *devstoreServiceClient) PutUserEntry(ctx context.Context, in *PutEntryRequest, opts ...grpc.CallOption) (*PutEntryReply, error) {
	out := new(PutEntryReply)
	err := c.cc.Invoke(ctx, "/chorus.DevstoreService/PutUserEntry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *devstoreServiceClient) DeleteUserEntry(ctx context.Context, in *DeleteEntryRequest, opts ...grpc.CallOption) (*DeleteEntryReply, error) {
	out := new(DeleteEntryReply)
	err := c.cc.Invoke(ctx, "/chorus.DevstoreService/DeleteUserEntry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *devstoreServiceClient) ListWorkspaceEntries(ctx context.Context, in *ListWorkspaceEntriesRequest, opts ...grpc.CallOption) (*ListEntriesReply, error) {
	out := new(ListEntriesReply)
	err := c.cc.Invoke(ctx, "/chorus.DevstoreService/ListWorkspaceEntries", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *devstoreServiceClient) GetWorkspaceEntry(ctx context.Context, in *GetWorkspaceEntryRequest, opts ...grpc.CallOption) (*GetEntryReply, error) {
	out := new(GetEntryReply)
	err := c.cc.Invoke(ctx, "/chorus.DevstoreService/GetWorkspaceEntry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *devstoreServiceClient) PutWorkspaceEntry(ctx context.Context, in *PutWorkspaceEntryRequest, opts ...grpc.CallOption) (*PutEntryReply, error) {
	out := new(PutEntryReply)
	err := c.cc.Invoke(ctx, "/chorus.DevstoreService/PutWorkspaceEntry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *devstoreServiceClient) DeleteWorkspaceEntry(ctx context.Context, in *DeleteWorkspaceEntryRequest, opts ...grpc.CallOption) (*DeleteEntryReply, error) {
	out := new(DeleteEntryReply)
	err := c.cc.Invoke(ctx, "/chorus.DevstoreService/DeleteWorkspaceEntry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DevstoreServiceServer is the server API for DevstoreService service.
type DevstoreServiceServer interface {
	ListGlobalEntries(context.Context, *ListEntriesRequest) (*ListEntriesReply, error)
	GetGlobalEntry(context.Context, *GetEntryRequest) (*GetEntryReply, error)
	PutGlobalEntry(context.Context, *PutEntryRequest) (*PutEntryReply, error)
	DeleteGlobalEntry(context.Context, *DeleteEntryRequest) (*DeleteEntryReply, error)
	ListUserEntries(context.Context, *ListEntriesRequest) (*ListEntriesReply, error)
	GetUserEntry(context.Context, *GetEntryRequest) (*GetEntryReply, error)
	PutUserEntry(context.Context, *PutEntryRequest) (*PutEntryReply, error)
	DeleteUserEntry(context.Context, *DeleteEntryRequest) (*DeleteEntryReply, error)
	ListWorkspaceEntries(context.Context, *ListWorkspaceEntriesRequest) (*ListEntriesReply, error)
	GetWorkspaceEntry(context.Context, *GetWorkspaceEntryRequest) (*GetEntryReply, error)
	PutWorkspaceEntry(context.Context, *PutWorkspaceEntryRequest) (*PutEntryReply, error)
	DeleteWorkspaceEntry(context.Context, *DeleteWorkspaceEntryRequest) (*DeleteEntryReply, error)
}

// UnimplementedDevstoreServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDevstoreServiceServer struct {
}

func (*UnimplementedDevstoreServiceServer) ListGlobalEntries(context.Context, *ListEntriesRequest) (*ListEntriesReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListGlobalEntries not implemented")
}
func (*UnimplementedDevstoreServiceServer) GetGlobalEntry(context.Context, *GetEntryRequest) (*GetEntryReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGlobalEntry not implemented")
}
func (*UnimplementedDevstoreServiceServer) PutGlobalEntry(context.Context, *PutEntryRequest) (*PutEntryReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutGlobalEntry not implemented")
}
func (*UnimplementedDevstoreServiceServer) DeleteGlobalEntry(context.Context, *DeleteEntryRequest) (*DeleteEntryReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteGlobalEntry not implemented")
}
func (*UnimplementedDevstoreServiceServer) ListUserEntries(context.Context, *ListEntriesRequest) (*ListEntriesReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListUserEntries not implemented")
}
func (*UnimplementedDevstoreServiceServer) GetUserEntry(context.Context, *GetEntryRequest) (*GetEntryReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserEntry not implemented")
}
func (*UnimplementedDevstoreServiceServer) PutUserEntry(context.Context, *PutEntryRequest) (*PutEntryReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutUserEntry not implemented")
}
func (*UnimplementedDevstoreServiceServer) DeleteUserEntry(context.Context, *DeleteEntryRequest) (*DeleteEntryReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteUserEntry not implemented")
}
func (*UnimplementedDevstoreServiceServer) ListWorkspaceEntries(context.Context, *ListWorkspaceEntriesRequest) (*ListEntriesReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListWorkspaceEntries not implemented")
}
func (*UnimplementedDevstoreServiceServer) GetWorkspaceEntry(context.Context, *GetWorkspaceEntryRequest) (*GetEntryReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWorkspaceEntry not implemented")
}
func (*UnimplementedDevstoreServiceServer) PutWorkspaceEntry(context.Context, *PutWorkspaceEntryRequest) (*PutEntryReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutWorkspaceEntry not implemented")
}
func (*UnimplementedDevstoreServiceServer) DeleteWorkspaceEntry(context.Context, *DeleteWorkspaceEntryRequest) (*DeleteEntryReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteWorkspaceEntry not implemented")
}

func RegisterDevstoreServiceServer(s *grpc.Server, srv DevstoreServiceServer) {
	s.RegisterService(&_DevstoreService_serviceDesc, srv)
}

func _DevstoreService_ListGlobalEntries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListEntriesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DevstoreServiceServer).ListGlobalEntries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chorus.DevstoreService/ListGlobalEntries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DevstoreServiceServer).ListGlobalEntries(ctx, req.(*ListEntriesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DevstoreService_GetGlobalEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DevstoreServiceServer).GetGlobalEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chorus.DevstoreService/GetGlobalEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DevstoreServiceServer).GetGlobalEntry(ctx, req.(*GetEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DevstoreService_PutGlobalEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DevstoreServiceServer).PutGlobalEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chorus.DevstoreService/PutGlobalEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DevstoreServiceServer).PutGlobalEntry(ctx, req.(*PutEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DevstoreService_DeleteGlobalEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DevstoreServiceServer).DeleteGlobalEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chorus.DevstoreService/DeleteGlobalEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DevstoreServiceServer).DeleteGlobalEntry(ctx, req.(*DeleteEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DevstoreService_ListUserEntries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListEntriesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DevstoreServiceServer).ListUserEntries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chorus.DevstoreService/ListUserEntries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DevstoreServiceServer).ListUserEntries(ctx, req.(*ListEntriesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DevstoreService_GetUserEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DevstoreServiceServer).GetUserEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chorus.DevstoreService/GetUserEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DevstoreServiceServer).GetUserEntry(ctx, req.(*GetEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DevstoreService_PutUserEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DevstoreServiceServer).PutUserEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chorus.DevstoreService/PutUserEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DevstoreServiceServer).PutUserEntry(ctx, req.(*PutEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DevstoreService_DeleteUserEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DevstoreServiceServer).DeleteUserEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chorus.DevstoreService/DeleteUserEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DevstoreServiceServer).DeleteUserEntry(ctx, req.(*DeleteEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DevstoreService_ListWorkspaceEntries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListWorkspaceEntriesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DevstoreServiceServer).ListWorkspaceEntries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chorus.DevstoreService/ListWorkspaceEntries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DevstoreServiceServer).ListWorkspaceEntries(ctx, req.(*ListWorkspaceEntriesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DevstoreService_GetWorkspaceEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWorkspaceEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DevstoreServiceServer).GetWorkspaceEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chorus.DevstoreService/GetWorkspaceEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DevstoreServiceServer).GetWorkspaceEntry(ctx, req.(*GetWorkspaceEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DevstoreService_PutWorkspaceEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutWorkspaceEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DevstoreServiceServer).PutWorkspaceEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chorus.DevstoreService/PutWorkspaceEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DevstoreServiceServer).PutWorkspaceEntry(ctx, req.(*PutWorkspaceEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DevstoreService_DeleteWorkspaceEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteWorkspaceEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DevstoreServiceServer).DeleteWorkspaceEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chorus.DevstoreService/DeleteWorkspaceEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DevstoreServiceServer).DeleteWorkspaceEntry(ctx, req.(*DeleteWorkspaceEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DevstoreService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chorus.DevstoreService",
	HandlerType: (*DevstoreServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListGlobalEntries",
			Handler:    _DevstoreService_ListGlobalEntries_Handler,
		},
		{
			MethodName: "GetGlobalEntry",
			Handler:    _DevstoreService_GetGlobalEntry_Handler,
		},
		{
			MethodName: "PutGlobalEntry",
			Handler:    _DevstoreService_PutGlobalEntry_Handler,
		},
		{
			MethodName: "DeleteGlobalEntry",
			Handler:    _DevstoreService_DeleteGlobalEntry_Handler,
		},
		{
			MethodName: "ListUserEntries",
			Handler:    _DevstoreService_ListUserEntries_Handler,
		},
		{
			MethodName: "GetUserEntry",
			Handler:    _DevstoreService_GetUserEntry_Handler,
		},
		{
			MethodName: "PutUserEntry",
			Handler:    _DevstoreService_PutUserEntry_Handler,
		},
		{
			MethodName: "DeleteUserEntry",
			Handler:    _DevstoreService_DeleteUserEntry_Handler,
		},
		{
			MethodName: "ListWorkspaceEntries",
			Handler:    _DevstoreService_ListWorkspaceEntries_Handler,
		},
		{
			MethodName: "GetWorkspaceEntry",
			Handler:    _DevstoreService_GetWorkspaceEntry_Handler,
		},
		{
			MethodName: "PutWorkspaceEntry",
			Handler:    _DevstoreService_PutWorkspaceEntry_Handler,
		},
		{
			MethodName: "DeleteWorkspaceEntry",
			Handler:    _DevstoreService_DeleteWorkspaceEntry_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "devstore-service.proto",
}
