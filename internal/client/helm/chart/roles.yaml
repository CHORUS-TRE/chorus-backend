apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: leader-election-role
  namespace: system  # Ensure this is the correct namespace where your manager runs
rules:
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["get", "watch", "list", "create", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: leader-election-rolebinding
  namespace: system  # Ensure this is the correct namespace where your manager runs
subjects:
- kind: ServiceAccount
  name: default  # Replace with the name of your service account if different
  namespace: system  # Ensure this is the correct namespace
roleRef:
  kind: Role
  name: leader-election-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: manager-role
rules:
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]
- apiGroups: [""]
  resources: ["services"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]
- apiGroups: ["default.chorus-tre.ch"]
  resources: ["workbenches"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]
- apiGroups: ["default.chorus-tre.ch"]
  resources: ["workbenches/status"]
  verbs: ["update"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: manager-rolebinding
subjects:
- kind: ServiceAccount
  name: default  # Replace with the name of your service account if different
  namespace: system  # Ensure this is the correct namespace where your service account is located
roleRef:
  kind: ClusterRole
  name: manager-role
  apiGroup: rbac.authorization.k8s.io
